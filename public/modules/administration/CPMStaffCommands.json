{
    "name": "CPMStaffCommands",
    "versions": [
        {
            "tag": "0.0.2",
            "description": "# MAD_CPMStaffCommands Module",
            "configSchema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"userDiscordChannel\"],\"additionalProperties\":false,\"properties\":{\"userDiscordChannel\":{\"title\":\"userDiscordChannel\",\"description\":\"Sends to discord\",\"default\":\"\",\"type\":\"string\"}}}",
            "uiSchema": "{}",
            "commands": [
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'MUTE')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetArg} true`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was muted.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü§ê ${player.name} muted ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "mute",
                    "description": null,
                    "trigger": "mute",
                    "helpText": "[02FEDMute (player name) (reason in quotes) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "No reason given",
                            "helpText": "Reason they were muted",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person to be muted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'ZOMB_FREE_SELF')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Zombie Free[-] [ADDFB3]for you![-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_HF\" 0 hostilefree`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n    // Execute the command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_Normal\" 400`\n    });\n\n    // Search for the adminMode variable\n    const zombFreeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['zombFreeVariable'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (zombFreeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(zombFreeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(zombFreeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'zombFreeVariable',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "zomb",
                    "description": null,
                    "trigger": "zomb",
                    "helpText": "[02FEDC]Stand directly above your land claim when you run this command!!!!!![-] ",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `buffplayer ${targetArg} god`,\n    });\n\n    //PM player to nitify them of thebuff\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[02FEDC]Mad[-][-] grants you God like power for [FF0507]2[-] [4FFF00]min![-]\"`,\n    });\n\n    //Notify sender of buff\n    await player.pm(`[ADDFB3]You have successfully buffed [B1A2CA]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "buff - 1",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "[02FEDC]buff (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "playerTarget",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 3",
                    "description": null,
                    "trigger": "th",
                    "helpText": "Targeted Horde round 3",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}[-] [02FEDC]has a horde coming at them. Grab some popcorn and enjoy the show![-]`);\n}\n\nawait main();",
                    "name": "th - 1",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Send a horde in 4 intervals in 30 seconds at a player. Type /th (name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person you're sending the horde after",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kick Everyone[-].');\n    };\n\n    const message = \"Doing a server restart. The server will be back up in a minute.\"\n\n    const targetMessage = /\\s/.test(message) ? `\"${message}\"` : message;\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `kickall ${targetMessage}`,\n    });\n\n}\nawait main();",
                    "name": "kickall",
                    "description": null,
                    "trigger": "kickall",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mv \"${player.name}\" \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    // Send success message to the player\n    await player.pm(`Successfully teleported to [02FEDC]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "avisit",
                    "description": null,
                    "trigger": "avisit",
                    "helpText": "[02FEDC]avisit (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player teleporting to",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 4",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Fourth round of Targeted Horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kill All[-].');\n    };\n\n    await player.pm(`[EA899A]Killed all of the zeds on the server[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `killall`,\n    });\n\n}\nawait main();",
                    "name": "killall",
                    "description": null,
                    "trigger": "killall",
                    "helpText": "[02FEDC]Kill all of the Zeds on the server.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_PREFAB')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Prefabs[-].');\n    };\n\n    await player.pm(`[EA899A]Resetting prefab[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `getprefab EOS_${player.epicOnlineServicesId} reset`,\n    });\n\n    await player.pm(`[EA899A]Prefab was[-] [ADDFB3]reset[-]`);\n}\nawait main();",
                    "name": "pr",
                    "description": null,
                    "trigger": "pr",
                    "helpText": "[02FEDC]Reset the POI you are standing in[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog } = data;\n\n    if (!checkPermission(pog, 'VISIT_MAP')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Beginning to visit the map[-]`);\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `visitmap full`,\n    });\n}\n\n\nawait main();",
                    "name": "visitmap",
                    "description": null,
                    "trigger": "visitmap",
                    "helpText": "[02FEDC]Open the map for Takaro and CPM.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function extractPermissionIds() {\n    const pog = data;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    try {\n        // Try using direct search which seems more reliable based on the logs\n        const directResponse = await takaro.role.roleControllerSearch({\n            filters: {\n                id: ['3ca7484e-5656-4474-897e-db149b732273']\n            }\n        });\n\n        // Check if we got role data\n        if (directResponse.data &&\n            directResponse.data.data &&\n            directResponse.data.data.length > 0 &&\n            directResponse.data.data[0].permissions) {\n\n            const permissions = directResponse.data.data[0].permissions;\n\n            // Extract all permission IDs into an array\n            const permissionIds = permissions\n                .filter(permData => permData.permission && permData.permission.id)\n                .map(permData => permData.permission.id);\n\n            // Output all IDs as a single array on one line\n            console.log(permissionIds);\n\n            return permissionIds.length;\n        }\n\n        console.log([]);\n        return 0;\n\n    } catch (error) {\n        console.error(`Error extracting permission IDs: ${error.message}`);\n        console.log([]);\n        return 0;\n    }\n}\n\n// Execute the function\nasync function main() {\n    try {\n        await extractPermissionIds();\n    } catch (error) {\n        console.log([]);\n    }\n}\n\n\n\nawait main();",
                    "name": "setwaypointpublic",
                    "description": null,
                    "trigger": "setwaypointpublic",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "//th\n//giveplus\n//brender/bundo\n//debuff",
                    "name": "aaaaaaa",
                    "description": null,
                    "trigger": "aaaaaaa",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'RESET_PLAYER')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `reset_player_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the reset command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `rpd ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have reset [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to reset [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "rpd",
                    "description": null,
                    "trigger": "rpd",
                    "helpText": "[02FEDC]rpd (player name) Resets a player's data. Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "the player's data you are resetting",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ban add ${targetPerson} 1 year ${targetReasoning} ${targetPerson}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was banned.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `üî® ${player.name} banned ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "ban",
                    "description": null,
                    "trigger": "ban",
                    "helpText": "[02FEDC]ban (player name) (reason in quotes) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "contact a moderator for the reason",
                            "helpText": "Reason they are banned",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person being banned",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rvr ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]Successfully removed [02FEDC]${playerTarget}'s[-] vending machine rental[-]`);\n}\n\nawait main();",
                    "name": "rvr",
                    "description": null,
                    "trigger": "rvr",
                    "helpText": "[02FEDC]rvr (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const reasoning = args.reasoning\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `arrest ${targetArg}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}[-] [EA899A]was arrested for ${reasoning}[-]`,\n    });\n    //Discord Channel Configuration\n    const userDiscord = data.module.userConfig.userDiscordChannel;\n    //Send it to Discord\n    await takaro.discord.discordControllerSendMessage(userDiscord, {\n        message: `${player.name} arrested ${playerTarget} for ${reasoning}`,\n    });\n};\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "arrest",
                    "description": null,
                    "trigger": "arrest",
                    "helpText": "[02FEDC]arrest (player name) (reason for arrest)[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Other player's name",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "no reason given",
                            "helpText": "Reason",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const pname = args.pname\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const newName = /\\s/.test(pname) ? `\"${pname}\"` : pname;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ocn ${targetArg} ${newName}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}'s[-] [02FEDC]name was set to ${pname} in chat.[-]`);\n}\n\nawait main();\n// ocn <steamId / entityId / playerName> <newName>\n// ocn <steamId / entityId / playerName> clear\n// ocn list",
                    "name": "ocn",
                    "description": null,
                    "trigger": "ocn",
                    "helpText": "[02FEDC] Change a player's name in chat. Type /ocn (Name) (New Name). Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "pname",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "new name",
                            "position": 1
                        },
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'SET_JAIL')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Jail[-] [ADDFB3]was set! 11x11 area. Use /arrest (players name) to arrest them[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 5 EOS_${player.epicOnlineServicesId} jail 0 reversed`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n}\nawait main();",
                    "name": "setjail",
                    "description": null,
                    "trigger": "setjail",
                    "helpText": "[02FEDC]Set an 11x11 area to put hail birds in.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'RDD')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Drone Data[-].');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rdd ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "rdd",
                    "description": null,
                    "trigger": "rdd",
                    "helpText": "[02FEDC]rdd (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person drone data is being reset for",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `debuffplayer ${targetArg} god`,\n    });;\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[ADDFB3]Your powers have stopped. Thanks for playing [FF6D6A]Double Tap[-][-]\"`,\n    });\n\n}\n\nawait main();\n",
                    "name": "buff - 2",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "Ends players buff",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `teleportplayer ${targetArg} ${player.name}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "pull",
                    "description": null,
                    "trigger": "pull",
                    "helpText": "[02FEDC]pull (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_CHUNKS')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Reset Chunks[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Reset Chunks[-] [ADDFB3]position was stored. Now go to the opposite corner and use /reset2[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `resetchunks p1`,\n    });\n\n    //*** Command(s): cpm-resetchunks, resetchunks ***\n    //Usage:\n    //1. resetchunks p1\n    //2. resetchunks p2\n    //3. resetchunks radius <radius> <steamId/entityId/Name>\n    //1. Store your position to be used on method 2.\n    //2. Reset chunks from position stored on method 1 until your current location(p2).\n    //3. Reset chunks within boundaries on <radius> distance from <steamId/entityId/Name> position.\n}\nawait main();",
                    "name": "reset1",
                    "description": null,
                    "trigger": "reset1",
                    "helpText": "[02FEDC]First position to reset a chunk. Use /reset2 in the opposite corner to reset the desired area.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `release ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[B1A2CA]${playerTarget}[-]'s name wasn't spelled correctly or is phone! Use quotes if their name has spaces!`)\n    };\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[FF6D6A]${args.playerTarget}[-] [EA899A]has been released. Please follow the rules![-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "release",
                    "description": null,
                    "trigger": "release",
                    "helpText": "[02FEDC]Release (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player that's released",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_CHUNKS')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Reset Chunks[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Reset Chunks[-] [ADDFB3]command executed[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `resetchunks p2`,\n    });\n\n    //*** Command(s): cpm-resetchunks, resetchunks ***\n    //Usage:\n    //1. resetchunks p1\n    //2. resetchunks p2\n    //3. resetchunks radius <radius> <steamId/entityId/Name>\n    //1. Store your position to be used on method 2.\n    //2. Reset chunks from position stored on method 1 until your current location(p2).\n    //3. Reset chunks within boundaries on <radius> distance from <steamId/entityId/Name> position.\n}\nawait main();",
                    "name": "reset2",
                    "description": null,
                    "trigger": "reset2",
                    "helpText": "[02FEDC]Last position to reset a chunk.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `kick ${targetPerson} ${targetReasoning}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was kicked.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü•æ ${player.name} kicked ${person} for ${reasoning}`,\n    });\n}\n\nawait main();",
                    "name": "kick",
                    "description": null,
                    "trigger": "kick",
                    "helpText": "[02FEDC]kick (player name) (reason in quotes). Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "Contact a moderator for a kick reason",
                            "helpText": "Reason for being kicked",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player getting kicked",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 2",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Second round of a targeted horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetPerson} false`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was unmuted.`);\n\n}\n\nawait main();",
                    "name": "unmute",
                    "description": null,
                    "trigger": "unmute",
                    "helpText": "[02FEDC]unmute (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "player to be unmuted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog, arguments: args } = data;\n    const timer = args.timer\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Shutdown the server[-].');\n    };\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `shutdownba ${timer}`,\n    });\n\n}\nawait main();",
                    "name": "shutdownba",
                    "description": null,
                    "trigger": "shutdownba",
                    "helpText": "No help text available",
                    "arguments": [
                        {
                            "name": "timer",
                            "type": "number",
                            "defaultValue": "10",
                            "helpText": "minutes till shutdown",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'CM_DM')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Admin[-] commmands.');\n    };\n\n    await player.pm(`[EA899A]Admin Mode[-] [ADDFB3]TOGGLED[-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"dm\"`,\n    });\n\n    // Execute the command CM\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"cm\"`\n    });\n\n    //Variable\n\n    // Search for the adminMode variable\n    const adminModeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['adminMode'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (adminModeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(adminModeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(adminModeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'adminMode',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "cm  & dm",
                    "description": null,
                    "trigger": "am",
                    "helpText": "[02FEDC]Creative mode and debug menu. Reserved for admins[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const tool = args.tool\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'WIPE_INVENTORY')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]wipe inventories[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `wi ${targetArg} ${tool}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}'s[-] [EA899A]${tool} was wiped.[-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "wi",
                    "description": null,
                    "trigger": "wi",
                    "helpText": "Wipe a player's belt, bag, equipment, all",
                    "arguments": [
                        {
                            "name": "tool",
                            "type": "string",
                            "defaultValue": "belt",
                            "helpText": "belt, bag, equipment, all",
                            "position": 1
                        },
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `kill_confirmation_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the kill command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `kill ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have killed [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to kill [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "kill",
                    "description": null,
                    "trigger": "kill",
                    "helpText": "[02FEDC]kill (players name) You must run the command a second time to confirm the kill. Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "The player you want to kill",
                            "position": 0
                        }
                    ]
                }
            ],
            "hooks": [],
            "cronJobs": [],
            "functions": [],
            "permissions": [
                {
                    "canHaveCount": false,
                    "description": "Kill a player",
                    "permission": "KILL_PLAYER",
                    "friendlyName": "Kill player"
                },
                {
                    "canHaveCount": false,
                    "description": "Creative mode and debug menu",
                    "permission": "CM_DM",
                    "friendlyName": "Admin Menu"
                },
                {
                    "canHaveCount": false,
                    "description": "Mute unruly players in game",
                    "permission": "MUTE",
                    "friendlyName": "Mute a Player"
                },
                {
                    "canHaveCount": false,
                    "description": "Zombie free command for admins to run the command for their personal house",
                    "permission": "ZOMB_FREE_SELF",
                    "friendlyName": "Zombie Free Self"
                },
                {
                    "canHaveCount": false,
                    "description": "Lists land claims near by",
                    "permission": "LIST_LANDCLAIMS",
                    "friendlyName": "List Land Claims nearby"
                },
                {
                    "canHaveCount": false,
                    "description": "remove nearby land claims",
                    "permission": "REMOVE_LANDCLAIMS",
                    "friendlyName": "Remove land claims"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets a player's corrupted data",
                    "permission": "RESET_PLAYER",
                    "friendlyName": "Reset Player Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets player drone data to place a new one",
                    "permission": "RDD",
                    "friendlyName": "Reset Drone Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Unmute a player",
                    "permission": "UNMUTE",
                    "friendlyName": "Unmute"
                },
                {
                    "canHaveCount": false,
                    "description": "Visit the map to unlock for Takaro and CPM",
                    "permission": "VISIT_MAP",
                    "friendlyName": "Visit Map"
                },
                {
                    "canHaveCount": false,
                    "description": "Release a player from jail",
                    "permission": "RELEASE",
                    "friendlyName": "Release Jail"
                },
                {
                    "canHaveCount": false,
                    "description": "Set the location of your jail ",
                    "permission": "SET_JAIL",
                    "friendlyName": "Set Jail Location"
                },
                {
                    "canHaveCount": false,
                    "description": "Buff another player",
                    "permission": "BUFF",
                    "friendlyName": "Buff"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset Chunks Permission",
                    "permission": "RESET_CHUNKS",
                    "friendlyName": "Rest Chunks"
                },
                {
                    "canHaveCount": false,
                    "description": "Wipe Inventory",
                    "permission": "WIPE_INVENTORY",
                    "friendlyName": "Wipe Inventory"
                },
                {
                    "canHaveCount": false,
                    "description": "Commands for staff to use without using Currency",
                    "permission": "STAFF_COMMANDS",
                    "friendlyName": "Staff Commands"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset prefab permission",
                    "permission": "RESET_PREFAB",
                    "friendlyName": "Reset Prefabs"
                }
            ]
        },
        {
            "tag": "latest",
            "description": "# MAD_CPMStaffCommands Module",
            "configSchema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"userDiscordChannel\"],\"additionalProperties\":false,\"properties\":{\"userDiscordChannel\":{\"title\":\"userDiscordChannel\",\"description\":\"Sends to discord\",\"default\":\"\",\"type\":\"string\"},\"droneReplacement\":{\"title\":\"Items\",\"description\":\"Gives a drone and some extra mods\",\"x-component\":\"item\",\"type\":\"array\",\"uniqueItems\":true,\"items\":{\"type\":\"object\",\"title\":\"Item\",\"properties\":{\"item\":{\"type\":\"string\",\"title\":\"Item\"},\"amount\":{\"type\":\"number\",\"title\":\"Amount\"},\"quality\":{\"type\":\"string\",\"title\":\"Quality\"}}}},\"moduleLookUp\":{\"title\":\"moduleLookUp\",\"description\":\"Uuid of the staff command module\",\"default\":\"\",\"type\":\"string\"},\"adminCommandDiscord\":{\"title\":\"adminCommandDiscord\",\"description\":\"Discord Channel Id of admin commands\",\"default\":\"1396394567611318293\",\"type\":\"string\"}}}",
            "uiSchema": "{\"droneReplacement\":{\"items\":{\"item\":{\"ui:widget\":\"item\"}}}}",
            "commands": [
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const level = args.playerTargetLevel;\n    const pname = args.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rl \"${pname}\" ${level}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}'s[-] level to [70FE02]${level}[-]`);\n}\n\nawait main();",
                    "name": "restoreL",
                    "description": "Change a players level",
                    "trigger": "restoreL",
                    "helpText": "[70FE02](name) (level)[-] - Sets players level",
                    "arguments": [
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players level",
                            "position": 1
                        },
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Players Name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kill All[-].');\n    };\n\n    await player.pm(`[EA899A]Killed all of the zeds on the server[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `killall`,\n    });\n\n}\nawait main();",
                    "name": "killall",
                    "description": "Kill all of the Zeds on the server.",
                    "trigger": "killall",
                    "helpText": "Kill all of the Zeds on the server.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 2",
                    "description": "Second round of Targeted Horde",
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 4",
                    "description": "Fourth round of Targeted Horde",
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'SET_JAIL')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Jail[-] [ADDFB3]was set! 11x11 area. Use /arrest (players name) to arrest them[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 5 EOS_${player.epicOnlineServicesId} jail 0 reversed`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n}\nawait main();",
                    "name": "setjail",
                    "description": "Set an 11x11 area to put your jail birds in.",
                    "trigger": "setjail",
                    "helpText": "- Set an 11x11 area to put jail birds in.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kick Everyone[-].');\n    };\n\n    const message = \"Doing a server restart. The server will be back up in a minute.\"\n\n    const targetMessage = /\\s/.test(message) ? `\"${message}\"` : message;\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `kickall ${targetMessage}`,\n    });\n\n}\nawait main();",
                    "name": "kickall",
                    "description": "Kicks everyone",
                    "trigger": "kickall",
                    "helpText": "Kicks all of the players off of the server",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 3",
                    "description": "Third round of Targeted Horde",
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog } = data;\n\n    if (!checkPermission(pog, 'VISIT_MAP')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Beginning to visit the map[-]`);\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `visitmap full`,\n    });\n}\n\n\nawait main();",
                    "name": "visitmap",
                    "description": "Open the map for Takaro and CPM",
                    "trigger": "visitmap",
                    "helpText": "Open the map for Takaro and CPM.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'RESET_PLAYER')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `reset_player_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the reset command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `rpd ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have reset [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to reset [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "rpd",
                    "description": "Resets a player's data. When there's no saving the data of a player. Use this as the last resort! You must confirm the reset by running it twice.",
                    "trigger": "rpd",
                    "helpText": "[70FE02](name)[-] - Resets a player back to day 1",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "the player's data you are resetting",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `teleportplayer ${targetArg} ${player.name}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "pull",
                    "description": "pull (name) - Pull a player to you. Use if /get isn't working",
                    "trigger": "pull",
                    "helpText": "[70FE02](name)[-] - Pull a player to you. Use if /get isn't working",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'RDD')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Drone Data[-].');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rdd ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "rdd",
                    "description": "Reset drone data for a player",
                    "trigger": "rdd",
                    "helpText": "[70FE02](name)[-] - fixes max drones deployed. Kicks Player",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person drone data is being reset for",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'ZOMB_FREE_SELF')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Zombie Free[-] [ADDFB3]for you![-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_HF\" 0 hostilefree`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n    // Execute the command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_Normal\" 400`\n    });\n\n    // Search for the adminMode variable\n    const zombFreeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['zombFreeVariable'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (zombFreeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(zombFreeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(zombFreeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'zombFreeVariable',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "zomb",
                    "description": "Admins can set their own person zombie free zone.",
                    "trigger": "zomb",
                    "helpText": "- Stand directly above your land claim when you run this command!",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_PREFAB')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Prefabs[-].');\n    };\n\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `Expect lag. A POI is being reset`,\n    });\n\n    await player.pm(`[EA899A]Resetting prefab[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `getprefab EOS_${player.epicOnlineServicesId} reset`,\n    });\n\n    await player.pm(`[EA899A]Prefab was[-] [ADDFB3]reset[-]`);\n}\nawait main();",
                    "name": "pr",
                    "description": "Resets the POI you're standing in",
                    "trigger": "pr",
                    "helpText": "Reset the POI you are standing in",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person } = args;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetPerson} false`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was unmuted.`);\n\n}\n\nawait main();",
                    "name": "unmute",
                    "description": "Moderator command to unmute players in game chats",
                    "trigger": "unmute",
                    "helpText": "[70FE02](name)[-] - Unmute player",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "player to be unmuted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    // Check Permissions\n    if (!checkPermission(pog, 'CM_DM')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Admin[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Admin Mode[-] [ADDFB3]TOGGLED[-]`);\n\n    // Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"dm\"`,\n    });\n\n    // Execute the command CM\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"cm\"`,\n    });\n\n    // --- Variable Logic ---\n\n    // Search for the adminMode variable\n    const adminModeVariable = (\n        await takaro.variable.variableControllerSearch({\n            filters: {\n                key: ['adminMode'],\n                moduleId: [mod.moduleId],\n                playerId: [player.id],\n                gameServerId: [gameServerId],\n            },\n        })\n    ).data.data[0];\n\n    if (adminModeVariable) {\n        // The variable already exists, increment its value\n        const currentValue = parseInt(adminModeVariable.value, 10);\n        const newValue = currentValue + 1;\n\n        // Check if the new value has reached the limit of 5\n        if (newValue >= 5) {\n            // Define the role to be removed\n            const roleId = `392e74ed-5cb8-4f9e-80a3-809b1096a5fa`;\n            const playerIDs = data.player.id\n            // Remove the role from the player\n            await takaro.player.playerControllerRemoveRole(playerIDs, roleId);\n            // Delete the variable to reset the count\n            await takaro.variable.variableControllerDelete(adminModeVariable.id);\n\n            // ** Inform the player with the new message **\n            await player.pm('[FF6347]Your CM role has been removed. Please DM Mad to resolve the issue.[-]');\n\n        } else {\n            // If the limit is not reached, just update the count\n            await takaro.variable.variableControllerUpdate(adminModeVariable.id, {\n                value: newValue.toString(),\n            });\n        }\n    } else {\n        // The variable doesn't exist, so create it for the first time\n        const expiresAt = new Date();\n        expiresAt.setHours(expiresAt.getHours() + 24); // Set expiration for 24 hours from now\n\n        await takaro.variable.variableControllerCreate({\n            key: 'adminMode',\n            value: '1', // Start the count at 1\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n            expiresAt: expiresAt.toISOString(), // Add the expiration date\n        });\n    }\n}\n\nawait main();",
                    "name": "am",
                    "description": "Admin menu with creative menu and debugmode",
                    "trigger": "am",
                    "helpText": "Creative mode and debug menu. Reserved for admins. Excessive use will remove the ability to use it.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const reasoning = args.reasoning\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `arrest ${targetArg}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}[-] [EA899A]was arrested for ${reasoning}[-]`,\n    });\n    //Discord Channel Configuration\n    const userDiscord = data.module.userConfig.userDiscordChannel;\n    //Send it to Discord\n    await takaro.discord.discordControllerSendMessage(userDiscord, {\n        message: `${player.name} arrested ${playerTarget} for ${reasoning}`,\n    });\n};\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "arrest",
                    "description": "Arrest an unruly player",
                    "trigger": "arrest",
                    "helpText": "[70FE02](name) (reason)[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Other player's name",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "\"Contact a moderator to be released\"",
                            "helpText": "Reason",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, module: mod, pog } = data;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const itemList = mod.userConfig.droneReplacement;\n\n    if (!itemList || !Array.isArray(itemList) || itemList.length === 0) {\n        await player.pm('The drone replacement kit is empty. Please contact an administrator.');\n        return;\n    }\n\n    await player.pm('Replacing your drone inventory...');\n\n    // Loop through the list of items to give\n    for (const itemEntry of itemList) {\n        if (!itemEntry || !itemEntry.item) {\n            console.log('Skipping invalid item entry in droneReplacement list.');\n            continue;\n        }\n\n        try {\n            // Find the item details using the item ID from the config\n            const itemDetails = (await takaro.item.itemControllerFindOne(itemEntry.item)).data.data;\n            const itemName = itemDetails.name;\n            const itemCode = itemDetails.id;\n            const amount = itemEntry.amount || 1;\n            const quality = itemEntry.quality || '';\n\n            // Give the item to the player\n            await takaro.gameserver.gameServerControllerGiveItem(gameServerId, player.id, {\n                name: itemCode,\n                amount: amount,\n                quality: quality,\n            });\n\n            // Notify the player\n            await player.pm(`You received: ${amount}x ${itemName}`);\n\n        } catch (error) {\n            console.error(`Failed to give item with ID ${itemEntry.item}:`, error);\n            await player.pm(`There was an error giving you an item (${itemEntry.item}). Please notify an admin.`);\n        }\n    }\n\n    await player.pm('Drone inventory replacement complete!');\n}\n\nawait main();\n",
                    "name": "replace",
                    "description": "replaces a players drone",
                    "trigger": "replace",
                    "helpText": "Gives a patreon drone and 8 cargo mos",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mv \"${player.name}\" \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    // Send success message to the player\n    await player.pm(`Successfully teleported to [02FEDC]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "avisit",
                    "description": "Visit a player without using currency.",
                    "trigger": "avisit",
                    "helpText": "[70FE02](name)[-] - Lets you visit a player bypassing needing to be friends and does NOT use Twinkies",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player teleporting to",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ban add ${targetPerson} 1 year ${targetReasoning} ${targetPerson}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was banned.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `üî® ${player.name} banned ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "ban",
                    "description": "Ban players for 1 year",
                    "trigger": "ban",
                    "helpText": "[70FE02](name) (reason)[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "contact a moderator for the reason",
                            "helpText": "Reason they are banned",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person being banned",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `buffplayer ${targetArg} god`,\n    });\n\n    //PM player to nitify them of thebuff\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[02FEDC]Mad[-][-] grants you God like power for [FF0507]2[-] [4FFF00]min![-]\"`,\n    });\n\n    //Notify sender of buff\n    await player.pm(`[ADDFB3]You have successfully buffed [B1A2CA]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "buff - 1",
                    "description": "Buff a player that's dieing a lot for 2 minutes.",
                    "trigger": "buff",
                    "helpText": "[70FE02](name)[-] - Gives the player god mode for a few minutes",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "playerTarget",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `debuffplayer ${targetArg} god`,\n    });;\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[ADDFB3]Your powers have stopped. Thanks for playing [FF6D6A]Double Tap[-][-]\"`,\n    });\n\n}\n\nawait main();\n",
                    "name": "buff - 2",
                    "description": "Automaticcally removes buff. no need to worry about this.",
                    "trigger": "buff",
                    "helpText": "Ends players buff",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `kick ${targetPerson} ${targetReasoning}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was kicked.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü•æ ${player.name} kicked ${person} for ${reasoning}`,\n    });\n}\n\nawait main();",
                    "name": "kick",
                    "description": "Moderator command to kick players",
                    "trigger": "kick",
                    "helpText": "[70FE02](name) (reason in quotes)[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player getting kicked",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "Contact a moderator for a kick reason",
                            "helpText": "Reason for being kicked",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `kill_confirmation_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the kill command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `kill ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have killed [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to kill [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "kill",
                    "description": "Kill a player",
                    "trigger": "kill",
                    "helpText": "[70FE02](name)[-] - Will kill the player. must be ran twice to be confirmed.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "The player you want to kill",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'MUTE')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetArg} true`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was muted.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü§ê ${player.name} muted ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "mute",
                    "description": "[70FE02](name)[-] - Moderator command to mute players",
                    "trigger": "mute",
                    "helpText": "[70FE02](name) \"(reason)\"[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person to be muted",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "No reason given",
                            "helpText": "Reason they were muted",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const pname = args.pname\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const newName = /\\s/.test(pname) ? `\"${pname}\"` : pname;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ocn ${targetArg} ${newName}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}'s[-] [02FEDC]name was set to ${pname} in chat.[-]`);\n}\n\nawait main();\n// ocn <steamId / entityId / playerName> <newName>\n// ocn <steamId / entityId / playerName> clear\n// ocn list",
                    "name": "ocn",
                    "description": "Change a player's name in chat. Type /ocn (Name) (New Name). Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. ",
                    "trigger": "ocn",
                    "helpText": "[70FE02](name) (new name)[-] - Change a player's name in chat.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target",
                            "position": 0
                        },
                        {
                            "name": "pname",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "new name",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `release ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[B1A2CA]${playerTarget}[-]'s name wasn't spelled correctly or is phone! Use quotes if their name has spaces!`)\n    };\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[FF6D6A]${args.playerTarget}[-] [EA899A]has been released. Please follow the rules![-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "release",
                    "description": "Release a player from jail",
                    "trigger": "release",
                    "helpText": "[70FE02](name)[-] - releases from jail",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player that's released",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const skillPoints = data.arguments.playerTargetLevel;\n    const pname = data.arguments.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rs  \"${pname}\" ${skillPoints}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}'s[-] skill points to [70FE02]${skillPoints}[-]`);\n}\n\nawait main();",
                    "name": "restoreS",
                    "description": "Type restoreS (name) (skill points). Have them spend their points",
                    "trigger": "restoreS",
                    "helpText": "[70FE02](name) (amount)[-] - sets a players skilll points to the amount",
                    "arguments": [
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players name",
                            "position": 0
                        },
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players skill points",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog, arguments: args } = data;\n    const timer = args.timer\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Shutdown the server[-].');\n    };\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `shutdownba ${timer}`,\n    });\n\n}\nawait main();",
                    "name": "restart",
                    "description": "Shut down the server with a timer. Type/ shutdownba (number of minutes) Example: /shutdownba 10",
                    "trigger": "restart",
                    "helpText": "[70FE02](minutes)[-] - starts a server restart.",
                    "arguments": [
                        {
                            "name": "timer",
                            "type": "number",
                            "defaultValue": "10",
                            "helpText": "minutes till shutdown",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog, module: mod, trigger } = data;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Administration[-] commmands. Staff has been notified and will be coming for you.');\n    }\n\n    const modId = mod.moduleId;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    const foundCommand = commands.find(cmd => cmd.trigger === trigger);\n\n    const helpText = foundCommand.helpText || 'No help text available for this command.';\n    await player.pm(`[E9EC6B]${foundCommand.trigger}[-] ${helpText}`);\n}\n\nawait main();",
                    "name": "brender",
                    "description": "Spawns a building",
                    "trigger": "brender",
                    "helpText": "[70FE02](programmed name of poi) (rotation) (height)[-] - only works in the console (f1 menu)/ Do not fly. use blocks to mark position. [02FEDC]bundo[-] to undo.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data } from '@takaro/helpers';\n\nfunction getDistance(point1, point2) {\n    const dx = point1.x - point2.x;\n    const dy = point1.y - point2.y;\n    const dz = point1.z - point2.z;\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    const landClaimsResponse = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: 'llp',\n    })).data.data;\n\n    const landClaimsText = landClaimsResponse.rawResult;\n\n    const playerPosition = {\n        x: pog.positionX,\n        y: pog.positionY,\n        z: pog.positionZ,\n    };\n\n    const claims = [];\n    const lines = landClaimsText.split(/[\\r\\n]+/);\n    let currentOwner = null;\n\n    const playerRegex = /^Player \"([^\"]+)\"/;\n    const coordRegex = /^\\s*\\((-?\\d+),\\s*(-?\\d+),\\s*(-?\\d+)\\)/;\n\n    for (const line of lines) {\n        const playerMatch = line.match(playerRegex);\n        if (playerMatch) {\n            currentOwner = playerMatch[1];\n            continue;\n        }\n\n        const coordMatch = line.match(coordRegex);\n        if (coordMatch && currentOwner) {\n            claims.push({\n                owner: currentOwner,\n                position: {\n                    x: parseInt(coordMatch[1], 10),\n                    y: parseInt(coordMatch[2], 10),\n                    z: parseInt(coordMatch[3], 10),\n                },\n            });\n        }\n    }\n\n    let closestClaim = null;\n    let minDistance = Infinity;\n\n    for (const claim of claims) {\n        const distance = getDistance(playerPosition, claim.position);\n\n        if (distance < minDistance) {\n            minDistance = distance;\n            closestClaim = claim;\n        }\n    }\n\n    if (closestClaim) {\n        const ownerName = closestClaim.owner.split(' (EOS_')[0];\n        const coords = `${closestClaim.position.x}, ${closestClaim.position.y}, ${closestClaim.position.z}`;\n        const distance = Math.round(minDistance);\n\n        const message = `The closest land claim is owned by [07F6FF]${ownerName}[-] at [70FE02]${coords}[-]. It is approximately ${distance} blocks away.`;\n\n        await player.pm(message);\n    }\n}\n\nawait main();",
                    "name": "llp",
                    "description": "Lists closest land claim to your position",
                    "trigger": "llp",
                    "helpText": "Lists closest land claim to your position",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, TakaroUserError } from '@takaro/helpers';\n\nfunction getDistance(point1, point2) {\n    const dx = point1.x - point2.x;\n    const dy = point1.y - point2.y;\n    const dz = point1.z - point2.z;\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod } = data;\n\n    const playerPosition = {\n        x: pog.positionX,\n        y: pog.positionY,\n        z: pog.positionZ,\n    };\n\n    const CONFIRMATION_VAR_KEY = `removeLCB_closest_claim_${player.id}`;\n\n    const existingConfirmation = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [CONFIRMATION_VAR_KEY],\n            gameServerId: [gameServerId],\n            playerId: [player.id],\n            moduleId: [mod.moduleId]\n        }\n    })).data.data[0];\n\n    if (existingConfirmation) {\n        const storedData = JSON.parse(existingConfirmation.value);\n        const expiryTime = new Date(storedData.expiry);\n        const now = new Date();\n\n        if (now < expiryTime) {\n            await takaro.variable.variableControllerDelete(existingConfirmation.id);\n\n            const closestX = storedData.x;\n            const closestY = storedData.y;\n            const closestZ = storedData.z;\n            const ownerName = storedData.ownerName;\n            const coords = `${closestX}, ${closestY}, ${closestZ}`;\n\n            const commandToExecute = `rlp2 ${closestX} ${closestY} ${closestZ}`;\n            await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n                command: commandToExecute,\n            });\n\n            await player.pm(`Confirmed! Executed command '${commandToExecute}' for the closest land claim owned by [07F6FF]${ownerName}[-] at [70FE02]${coords}[-].`);\n        } else {\n            await takaro.variable.variableControllerDelete(existingConfirmation.id);\n            await player.pm('Your previous /removeLCB request has expired. Please run /removeLCB again to get new information and confirm.');\n        }\n        return;\n    }\n\n    const landClaimsResponse = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: 'llp',\n    })).data.data;\n\n    const landClaimsText = landClaimsResponse.rawResult;\n\n    const claims = [];\n    const lines = landClaimsText.split(/[\\r\\n]+/);\n    let currentOwner = null;\n\n    const playerRegex = /^Player \"([^\"]+)\"/;\n    const coordRegex = /^\\s*\\((-?\\d+),\\s*(-?\\d+),\\s*(-?\\d+)\\)/;\n\n    for (const line of lines) {\n        const playerMatch = line.match(playerRegex);\n        if (playerMatch) {\n            currentOwner = playerMatch[1];\n            continue;\n        }\n\n        const coordMatch = line.match(coordRegex);\n        if (coordMatch && currentOwner) {\n            claims.push({\n                owner: currentOwner,\n                position: {\n                    x: parseInt(coordMatch[1], 10),\n                    y: parseInt(coordMatch[2], 10),\n                    z: parseInt(coordMatch[3], 10),\n                },\n            });\n        }\n    }\n\n    let closestClaim = null;\n    let minDistance = Infinity;\n\n    for (const claim of claims) {\n        const distance = getDistance(playerPosition, claim.position);\n\n        if (distance < minDistance) {\n            minDistance = distance;\n            closestClaim = claim;\n        }\n    }\n\n    const ownerName = closestClaim.owner.split(' (EOS_')[0];\n    const coords = `${closestClaim.position.x}, ${closestClaim.position.y}, ${closestClaim.position.z}`;\n    const distance = Math.round(minDistance);\n\n    const message = `The closest land claim is owned by [07F6FF]${ownerName}[-] at [70FE02]${coords}[-]. It is approximately ${distance} blocks away. Run [FEF902]/removeLCB[-] again within 120 seconds to to remove the land claim.`;\n\n    await player.pm(message);\n\n    const now = new Date();\n    const expiry = new Date(now.getTime() + 120 * 1000);\n\n    await takaro.variable.variableControllerCreate({\n        key: CONFIRMATION_VAR_KEY,\n        value: JSON.stringify({\n            x: closestClaim.position.x,\n            y: closestClaim.position.y,\n            z: closestClaim.position.z,\n            ownerName: ownerName,\n            expiry: expiry.toISOString()\n        }),\n        gameServerId,\n        moduleId: mod.moduleId,\n        playerId: player.id\n    });\n}\n\nawait main();",
                    "name": "removeLCB",
                    "description": null,
                    "trigger": "removeLCB",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog, module: mod, trigger } = data;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Administration[-] commmands. Staff has been notified and will be coming for you.');\n    }\n\n    const modId = mod.moduleId;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    const foundCommand = commands.find(cmd => cmd.trigger === trigger);\n\n    const helpText = foundCommand.helpText || 'No help text available for this command.';\n    await player.pm(`[E9EC6B]${foundCommand.trigger}[-] ${helpText}`);\n}\n\nawait main();",
                    "name": "bundo",
                    "description": "Un does brender",
                    "trigger": "bundo",
                    "helpText": "- only works in the console (f1 menu). Un does brender",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rvr \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]Successfully removed [02FEDC]${playerTarget}'s[-] vending machine rental[-]`);\n}\n\nawait main();",
                    "name": "rvr",
                    "description": "[70FE02](name)[-] - Reset vending machine rental for a player.",
                    "trigger": "rvr",
                    "helpText": "[70FE02](name)[-] - Resets a vending rental for a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function extractPermissionIds() {\n    const pog = data;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    try {\n        // Try using direct search which seems more reliable based on the logs\n        const directResponse = await takaro.role.roleControllerSearch({\n            filters: {\n                id: ['3ca7484e-5656-4474-897e-db149b732273']\n            }\n        });\n\n        // Check if we got role data\n        if (directResponse.data &&\n            directResponse.data.data &&\n            directResponse.data.data.length > 0 &&\n            directResponse.data.data[0].permissions) {\n\n            const permissions = directResponse.data.data[0].permissions;\n\n            // Extract all permission IDs into an array\n            const permissionIds = permissions\n                .filter(permData => permData.permission && permData.permission.id)\n                .map(permData => permData.permission.id);\n\n            // Output all IDs as a single array on one line\n            console.log(permissionIds);\n\n            return permissionIds.length;\n        }\n\n        console.log([]);\n        return 0;\n\n    } catch (error) {\n        console.error(`Error extracting permission IDs: ${error.message}`);\n        console.log([]);\n        return 0;\n    }\n}\n\n// Execute the function\nasync function main() {\n    try {\n        await extractPermissionIds();\n    } catch (error) {\n        console.log([]);\n    }\n}\n\n\n\nawait main();",
                    "name": "setwaypointpublic",
                    "description": "Public waypoint setter ",
                    "trigger": "setwaypointpublic",
                    "helpText": "[70FE02](waypoint name)[-] - sets a waypoint public",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const tool = args.tool\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'WIPE_INVENTORY')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]wipe inventories[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `wi ${playerTarget} ${tool}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}'s[-] [EA899A]${tool} was wiped.[-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "wi",
                    "description": "Wipe a player's belt, bag of all",
                    "trigger": "wi",
                    "helpText": "[70FE02](name) <[bag] [belt] [equipment] [all]>[-] - wipes inventory of chosen option. Bag = inventory",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person",
                            "position": 0
                        },
                        {
                            "name": "tool",
                            "type": "string",
                            "defaultValue": "belt",
                            "helpText": "belt, bag, equipment, all",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}[-] [02FEDC]has a horde coming at them. Grab some popcorn and enjoy the show![-]`);\n}\n\nawait main();",
                    "name": "th - 1",
                    "description": "Reset vending machine rental for a player.",
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person you're sending the horde after",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const targetArg = /\\s/.test(playerTarget) ? `\\\"${playerTarget}\\\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `lbp ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('PlayerBed:')) {\n        const coordsString = response.split(' at ')[1];\n        const responseLocation = coordsString.replace(/, /g, ' ');\n\n        await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `teleportplayer \"${player.name}\" ${responseLocation}`,\n        });\n\n        await player.pm(`Teleporting you to [07F6FF]${playerTarget}'s[-] bed.`);\n    } else {\n        await player.pm(`'${playerTarget}' isnt online or isn't spelled correctly.`);\n    }\n}\n\nawait main();",
                    "name": "abed",
                    "description": "Teleports admin to a players bed roll",
                    "trigger": "abed",
                    "helpText": "[70FE02](name)[-] - Teleports an admin to a players bed roll. Player must be online",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog, arguments: args } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Administration[-] commmands. Staff has been notified and will be coming for you.');\n    }\n\n    // Use the ID of the current module directly.\n    const modId = data.module.module.id;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    if (args.commandName === 'all') {\n        // Sort the commands alphabetically by trigger.\n        commands.sort((a, b) => a.trigger.localeCompare(b.trigger));\n\n        // Filter out duplicate commands based on the trigger name.\n        const seen = new Set();\n        const uniqueCommands = commands.filter(command => {\n            const duplicate = seen.has(command.trigger);\n            seen.add(command.trigger);\n            return !duplicate;\n        });\n\n        for (const command of uniqueCommands) {\n            await player.pm(`[E9EC6B]${command.trigger}[-] ${command.helpText}`);\n        }\n    } else {\n        const foundCommand = commands.find(cmd => cmd.trigger === args.commandName);\n        await player.pm(`[E9EC6B]${foundCommand.trigger}[-] ${foundCommand.helpText}`);\n    }\n}\n\nawait main();",
                    "name": "admin",
                    "description": "List of commands and help for the admin.",
                    "trigger": "admin",
                    "helpText": "A list of admin help commands for admins. [70FE02](name of command)[-] for help with a specific command",
                    "arguments": [
                        {
                            "name": "commandName",
                            "type": "string",
                            "defaultValue": "all",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { data, takaro } from '@takaro/helpers';\nasync function main() {\n    const {} = data;\n}\nawait main();",
                    "name": "addcurrency",
                    "description": "Adds currency to the player",
                    "trigger": "addcurrency",
                    "helpText": "[70FE02](name) (amount)[-]",
                    "arguments": []
                },
                {
                    "function": "import { data, takaro } from '@takaro/helpers';\nasync function main() {\n    const {} = data;\n}\nawait main();",
                    "name": "revokecurrency",
                    "description": "Removes currency to the player",
                    "trigger": "revokecurrency",
                    "helpText": "[70FE02](name) (amount)[-]",
                    "arguments": []
                }
            ],
            "hooks": [],
            "cronJobs": [
                {
                    "function": "import { takaro, data } from '@takaro/helpers';\n\nasync function main() {\n    const adminCommandDiscord = data.module.userConfig.adminCommandDiscord;\n    const modId = data.module.module.id;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    // Sort the commands array alphabetically by the trigger name.\n    commands.sort((a, b) => a.trigger.localeCompare(b.trigger));\n\n    // Filter out duplicate commands based on the trigger name.\n    const seen = new Set();\n    const uniqueCommands = commands.filter(command => {\n        const duplicate = seen.has(command.trigger);\n        seen.add(command.trigger);\n        return !duplicate;\n    });\n\n    // Get today's date and format it.\n    const today = new Date();\n    const dateOptions = { timeZone: 'America/Chicago', year: 'numeric', month: 'long', day: 'numeric' };\n    const formattedDate = today.toLocaleDateString('en-US', dateOptions);\n\n    const discordCharLimit = 1900;\n    const messages = [];\n\n    const header = `## ‚îÄ‚ïê⁄ø⁄∞€£⁄ø‚ïê‚îÄ **Admin Command List - Updated ${formattedDate}** ‚îÄ‚ïê⁄ø⁄∞€£⁄ø‚ïê‚îÄ\\n`\n        + `### Help is now available in game! type in chat \\`/admin\\` or add a command name in the end to get help just for that command\\n\\n`;\n\n    let currentMessage = header;\n\n    // Loop through the UNIQUE commands instead of the original full list.\n    for (const command of uniqueCommands) {\n        // Clean the help text.\n        const cleanedHelpText = command.helpText\n            .replace(/\\[[0-9A-Fa-f]{6}\\]/g, '') // Removes tags like [70FE02]\n            .replace(/\\[-\\]/g, '');             // Removes the closing [-] tag\n\n        const commandLine = `- **${command.trigger}** \\`${cleanedHelpText.trim()}\\`\\n`;\n\n        if (currentMessage.length + commandLine.length > discordCharLimit) {\n            messages.push(currentMessage);\n            currentMessage = ''; // Start the next message blank.\n        }\n\n        currentMessage += commandLine;\n    }\n\n    messages.push(currentMessage);\n\n    for (const msg of messages) {\n        if (msg.trim() !== '') {\n            await takaro.discord.discordControllerSendMessage(adminCommandDiscord, {\n                message: msg,\n            });\n        }\n    }\n}\n\nawait main();",
                    "name": "discordStaffCommands",
                    "description": null,
                    "temporalValue": "0 0 * * *"
                }
            ],
            "functions": [],
            "permissions": [
                {
                    "canHaveCount": false,
                    "description": "Kill a player",
                    "permission": "KILL_PLAYER",
                    "friendlyName": "Kill player"
                },
                {
                    "canHaveCount": false,
                    "description": "Creative mode and debug menu",
                    "permission": "CM_DM",
                    "friendlyName": "Admin Menu"
                },
                {
                    "canHaveCount": false,
                    "description": "Mute unruly players in game",
                    "permission": "MUTE",
                    "friendlyName": "Mute a Player"
                },
                {
                    "canHaveCount": false,
                    "description": "Zombie free command for admins to run the command for their personal house",
                    "permission": "ZOMB_FREE_SELF",
                    "friendlyName": "Zombie Free Self"
                },
                {
                    "canHaveCount": false,
                    "description": "Lists land claims near by",
                    "permission": "LIST_LANDCLAIMS",
                    "friendlyName": "List Land Claims nearby"
                },
                {
                    "canHaveCount": false,
                    "description": "remove nearby land claims",
                    "permission": "REMOVE_LANDCLAIMS",
                    "friendlyName": "Remove land claims"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets a player's corrupted data",
                    "permission": "RESET_PLAYER",
                    "friendlyName": "Reset Player Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets player drone data to place a new one",
                    "permission": "RDD",
                    "friendlyName": "Reset Drone Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Unmute a player",
                    "permission": "UNMUTE",
                    "friendlyName": "Unmute"
                },
                {
                    "canHaveCount": false,
                    "description": "Visit the map to unlock for Takaro and CPM",
                    "permission": "VISIT_MAP",
                    "friendlyName": "Visit Map"
                },
                {
                    "canHaveCount": false,
                    "description": "Release a player from jail",
                    "permission": "RELEASE",
                    "friendlyName": "Release Jail"
                },
                {
                    "canHaveCount": false,
                    "description": "Set the location of your jail ",
                    "permission": "SET_JAIL",
                    "friendlyName": "Set Jail Location"
                },
                {
                    "canHaveCount": false,
                    "description": "Buff another player",
                    "permission": "BUFF",
                    "friendlyName": "Buff"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset Chunks Permission",
                    "permission": "RESET_CHUNKS",
                    "friendlyName": "Rest Chunks"
                },
                {
                    "canHaveCount": false,
                    "description": "Wipe Inventory",
                    "permission": "WIPE_INVENTORY",
                    "friendlyName": "Wipe Inventory"
                },
                {
                    "canHaveCount": false,
                    "description": "Commands for staff to use without using Currency",
                    "permission": "STAFF_COMMANDS",
                    "friendlyName": "Staff Commands"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset prefab permission",
                    "permission": "RESET_PREFAB",
                    "friendlyName": "Reset Prefabs"
                }
            ]
        },
        {
            "tag": "0.0.1",
            "description": "# MAD_CPMStaffCommands Module",
            "configSchema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"userDiscordChannel\"],\"additionalProperties\":false,\"properties\":{\"userDiscordChannel\":{\"title\":\"userDiscordChannel\",\"description\":\"Sends to discord\",\"default\":\"\",\"type\":\"string\"}}}",
            "uiSchema": "{}",
            "commands": [
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'CM_DM')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Admin[-] commmands.');\n    };\n\n    await player.pm(`[EA899A]Admin Mode[-] [ADDFB3]TOGGLED[-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"dm\"`,\n    });\n\n    // Execute the command CM\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"cm\"`\n    });\n\n    //Variable\n\n    // Search for the adminMode variable\n    const adminModeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['adminMode'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (adminModeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(adminModeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(adminModeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'adminMode',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "cm  & dm",
                    "description": null,
                    "trigger": "am",
                    "helpText": "[02FEDC]Creative mode and debug menu. Reserved for admins[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 2",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Second round of a targeted horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'ZOMB_FREE_SELF')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Zombie Free[-] [ADDFB3]for you![-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_HF\" 0 hostilefree`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n    // Execute the command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_Normal\" 400`\n    });\n\n    // Search for the adminMode variable\n    const zombFreeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['zombFreeVariable'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (zombFreeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(zombFreeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(zombFreeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'zombFreeVariable',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "zomb",
                    "description": null,
                    "trigger": "zomb",
                    "helpText": "[02FEDC]Stand directly above your land claim when you run this command!!!!!![-] ",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 3",
                    "description": null,
                    "trigger": "th",
                    "helpText": "Targeted Horde round 3",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const reasoning = args.reasoning\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `arrest ${targetArg}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}[-] [EA899A]was arrested for ${reasoning}[-]`,\n    });\n    //Discord Channel Configuration\n    const userDiscord = data.module.userConfig.userDiscordChannel;\n    //Send it to Discord\n    await takaro.discord.discordControllerSendMessage(userDiscord, {\n        message: `${player.name} arrested ${playerTarget} for ${reasoning}`,\n    });\n};\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "arrest",
                    "description": null,
                    "trigger": "arrest",
                    "helpText": "[02FEDC]arrest (player name) (reason for arrest)[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "no reason given",
                            "helpText": "Reason",
                            "position": 1
                        },
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Other player's name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'MUTE')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetArg} true`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was muted.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü§ê ${player.name} muted ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "mute",
                    "description": null,
                    "trigger": "mute",
                    "helpText": "[02FEDMute (player name) (reason in quotes) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "No reason given",
                            "helpText": "Reason they were muted",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person to be muted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'SET_JAIL')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Jail[-] [ADDFB3]was set! 11x11 area. Use /arrest (players name) to arrest them[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 5 EOS_${player.epicOnlineServicesId} jail 0 reversed`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n}\nawait main();",
                    "name": "setjail",
                    "description": null,
                    "trigger": "setjail",
                    "helpText": "[02FEDC]Set an 11x11 area to put hail birds in.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rvr ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]Successfully removed [02FEDC]${playerTarget}'s[-] vending machine rental[-]`);\n}\n\nawait main();",
                    "name": "rvr",
                    "description": null,
                    "trigger": "rvr",
                    "helpText": "[02FEDC]rvr (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `teleportplayer ${targetArg} ${player.name}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "pull",
                    "description": null,
                    "trigger": "pull",
                    "helpText": "[02FEDC]pull (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_PREFAB')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Prefabs[-].');\n    };\n\n    await player.pm(`[EA899A]Resetting prefab[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `getprefab EOS_${player.epicOnlineServicesId} reset`,\n    });\n\n    await player.pm(`[EA899A]Prefab was[-] [ADDFB3]reset[-]`);\n}\nawait main();",
                    "name": "pr",
                    "description": null,
                    "trigger": "pr",
                    "helpText": "[02FEDC]Reset the POI you are standing in[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'RESET_PLAYER')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `reset_player_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the reset command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `rpd ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have reset [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to reset [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "rpd",
                    "description": null,
                    "trigger": "rpd",
                    "helpText": "[02FEDC]rpd (player name) Resets a player's data. Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "the player's data you are resetting",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ban add ${targetPerson} 1 year ${targetReasoning} ${targetPerson}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was banned.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `üî® ${player.name} banned ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "ban",
                    "description": null,
                    "trigger": "ban",
                    "helpText": "[02FEDC]ban (player name) (reason in quotes) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "contact a moderator for the reason",
                            "helpText": "Reason they are banned",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person being banned",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const pname = args.pname\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const newName = /\\s/.test(pname) ? `\"${pname}\"` : pname;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ocn ${targetArg} ${newName}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}'s[-] [02FEDC]name was set to ${pname} in chat.[-]`);\n}\n\nawait main();\n// ocn <steamId / entityId / playerName> <newName>\n// ocn <steamId / entityId / playerName> clear\n// ocn list",
                    "name": "ocn",
                    "description": null,
                    "trigger": "ocn",
                    "helpText": "[02FEDC] Change a player's name in chat. Type /ocn (Name) (New Name). Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target",
                            "position": 0
                        },
                        {
                            "name": "pname",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "new name",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function extractPermissionIds() {\n    const pog = data;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    try {\n        // Try using direct search which seems more reliable based on the logs\n        const directResponse = await takaro.role.roleControllerSearch({\n            filters: {\n                id: ['3ca7484e-5656-4474-897e-db149b732273']\n            }\n        });\n\n        // Check if we got role data\n        if (directResponse.data &&\n            directResponse.data.data &&\n            directResponse.data.data.length > 0 &&\n            directResponse.data.data[0].permissions) {\n\n            const permissions = directResponse.data.data[0].permissions;\n\n            // Extract all permission IDs into an array\n            const permissionIds = permissions\n                .filter(permData => permData.permission && permData.permission.id)\n                .map(permData => permData.permission.id);\n\n            // Output all IDs as a single array on one line\n            console.log(permissionIds);\n\n            return permissionIds.length;\n        }\n\n        console.log([]);\n        return 0;\n\n    } catch (error) {\n        console.error(`Error extracting permission IDs: ${error.message}`);\n        console.log([]);\n        return 0;\n    }\n}\n\n// Execute the function\nasync function main() {\n    try {\n        await extractPermissionIds();\n    } catch (error) {\n        console.log([]);\n    }\n}\n\n\n\nawait main();",
                    "name": "setwaypointpublic",
                    "description": null,
                    "trigger": "setwaypointpublic",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `debuffplayer ${targetArg} god`,\n    });;\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[ADDFB3]Your powers have stopped. Thanks for playing [FF6D6A]Double Tap[-][-]\"`,\n    });\n\n}\n\nawait main();\n",
                    "name": "buff - 2",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "Ends players buff",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kill All[-].');\n    };\n\n    await player.pm(`[EA899A]Killed all of the zeds on the server[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `killall`,\n    });\n\n}\nawait main();",
                    "name": "killall",
                    "description": null,
                    "trigger": "killall",
                    "helpText": "[02FEDC]Kill all of the Zeds on the server.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kick Everyone[-].');\n    };\n\n    const message = \"Doing a server restart. The server will be back up in a minute.\"\n\n    const targetMessage = /\\s/.test(message) ? `\"${message}\"` : message;\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `kickall ${targetMessage}`,\n    });\n\n}\nawait main();",
                    "name": "kickall",
                    "description": null,
                    "trigger": "kickall",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mv \"${player.name}\" \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    // Send success message to the player\n    await player.pm(`Successfully teleported to [02FEDC]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "avisit",
                    "description": null,
                    "trigger": "avisit",
                    "helpText": "[02FEDC]avisit (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player teleporting to",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_CHUNKS')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Reset Chunks[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Reset Chunks[-] [ADDFB3]position was stored. Now go to the opposite corner and use /reset2[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `resetchunks p1`,\n    });\n\n    //*** Command(s): cpm-resetchunks, resetchunks ***\n    //Usage:\n    //1. resetchunks p1\n    //2. resetchunks p2\n    //3. resetchunks radius <radius> <steamId/entityId/Name>\n    //1. Store your position to be used on method 2.\n    //2. Reset chunks from position stored on method 1 until your current location(p2).\n    //3. Reset chunks within boundaries on <radius> distance from <steamId/entityId/Name> position.\n}\nawait main();",
                    "name": "reset1",
                    "description": null,
                    "trigger": "reset1",
                    "helpText": "[02FEDC]First position to reset a chunk. Use /reset2 in the opposite corner to reset the desired area.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `release ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[B1A2CA]${playerTarget}[-]'s name wasn't spelled correctly or is phone! Use quotes if their name has spaces!`)\n    };\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[FF6D6A]${args.playerTarget}[-] [EA899A]has been released. Please follow the rules![-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "release",
                    "description": null,
                    "trigger": "release",
                    "helpText": "[02FEDC]Release (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player that's released",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}[-] [02FEDC]has a horde coming at them. Grab some popcorn and enjoy the show![-]`);\n}\n\nawait main();",
                    "name": "th - 1",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Send a horde in 4 intervals in 30 seconds at a player. Type /th (name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person you're sending the horde after",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog } = data;\n\n    if (!checkPermission(pog, 'VISIT_MAP')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Beginning to visit the map[-]`);\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `visitmap full`,\n    });\n}\n\n\nawait main();",
                    "name": "visitmap",
                    "description": null,
                    "trigger": "visitmap",
                    "helpText": "[02FEDC]Open the map for Takaro and CPM.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetPerson} false`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was unmuted.`);\n\n}\n\nawait main();",
                    "name": "unmute",
                    "description": null,
                    "trigger": "unmute",
                    "helpText": "[02FEDC]unmute (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "player to be unmuted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "//th\n//giveplus\n//brender/bundo\n//debuff",
                    "name": "aaaaaaa",
                    "description": null,
                    "trigger": "aaaaaaa",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `kill_confirmation_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the kill command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `kill ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have killed [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to kill [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "kill",
                    "description": null,
                    "trigger": "kill",
                    "helpText": "[02FEDC]kill (players name) You must run the command a second time to confirm the kill. Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "The player you want to kill",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `buffplayer ${targetArg} god`,\n    });\n\n    //PM player to nitify them of thebuff\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[02FEDC]Mad[-][-] grants you God like power for [FF0507]2[-] [4FFF00]min![-]\"`,\n    });\n\n    //Notify sender of buff\n    await player.pm(`[ADDFB3]You have successfully buffed [B1A2CA]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "buff - 1",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "[02FEDC]buff (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "playerTarget",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 4",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Fourth round of Targeted Horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog, arguments: args } = data;\n    const timer = args.timer\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Shutdown the server[-].');\n    };\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `shutdownba ${timer}`,\n    });\n\n}\nawait main();",
                    "name": "shutdownba",
                    "description": null,
                    "trigger": "shutdownba",
                    "helpText": "No help text available",
                    "arguments": [
                        {
                            "name": "timer",
                            "type": "number",
                            "defaultValue": "10",
                            "helpText": "minutes till shutdown",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `kick ${targetPerson} ${targetReasoning}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was kicked.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü•æ ${player.name} kicked ${person} for ${reasoning}`,\n    });\n}\n\nawait main();",
                    "name": "kick",
                    "description": null,
                    "trigger": "kick",
                    "helpText": "[02FEDC]kick (player name) (reason in quotes). Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "Contact a moderator for a kick reason",
                            "helpText": "Reason for being kicked",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player getting kicked",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'RDD')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Drone Data[-].');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rdd ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "rdd",
                    "description": null,
                    "trigger": "rdd",
                    "helpText": "[02FEDC]rdd (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person drone data is being reset for",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const tool = args.tool\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'WIPE_INVENTORY')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]wipe inventories[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `wi ${targetArg} ${tool}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}'s[-] [EA899A]${tool} was wiped.[-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "wi",
                    "description": null,
                    "trigger": "wi",
                    "helpText": "Wipe a player's belt, bag, equipment, all",
                    "arguments": [
                        {
                            "name": "tool",
                            "type": "string",
                            "defaultValue": "belt",
                            "helpText": "belt, bag, equipment, all",
                            "position": 1
                        },
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_CHUNKS')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Reset Chunks[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Reset Chunks[-] [ADDFB3]command executed[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `resetchunks p2`,\n    });\n\n    //*** Command(s): cpm-resetchunks, resetchunks ***\n    //Usage:\n    //1. resetchunks p1\n    //2. resetchunks p2\n    //3. resetchunks radius <radius> <steamId/entityId/Name>\n    //1. Store your position to be used on method 2.\n    //2. Reset chunks from position stored on method 1 until your current location(p2).\n    //3. Reset chunks within boundaries on <radius> distance from <steamId/entityId/Name> position.\n}\nawait main();",
                    "name": "reset2",
                    "description": null,
                    "trigger": "reset2",
                    "helpText": "[02FEDC]Last position to reset a chunk.[-]",
                    "arguments": []
                }
            ],
            "hooks": [],
            "cronJobs": [],
            "functions": [],
            "permissions": [
                {
                    "canHaveCount": false,
                    "description": "Kill a player",
                    "permission": "KILL_PLAYER",
                    "friendlyName": "Kill player"
                },
                {
                    "canHaveCount": false,
                    "description": "Creative mode and debug menu",
                    "permission": "CM_DM",
                    "friendlyName": "Admin Menu"
                },
                {
                    "canHaveCount": false,
                    "description": "Mute unruly players in game",
                    "permission": "MUTE",
                    "friendlyName": "Mute a Player"
                },
                {
                    "canHaveCount": false,
                    "description": "Zombie free command for admins to run the command for their personal house",
                    "permission": "ZOMB_FREE_SELF",
                    "friendlyName": "Zombie Free Self"
                },
                {
                    "canHaveCount": false,
                    "description": "Lists land claims near by",
                    "permission": "LIST_LANDCLAIMS",
                    "friendlyName": "List Land Claims nearby"
                },
                {
                    "canHaveCount": false,
                    "description": "remove nearby land claims",
                    "permission": "REMOVE_LANDCLAIMS",
                    "friendlyName": "Remove land claims"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets a player's corrupted data",
                    "permission": "RESET_PLAYER",
                    "friendlyName": "Reset Player Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets player drone data to place a new one",
                    "permission": "RDD",
                    "friendlyName": "Reset Drone Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Unmute a player",
                    "permission": "UNMUTE",
                    "friendlyName": "Unmute"
                },
                {
                    "canHaveCount": false,
                    "description": "Visit the map to unlock for Takaro and CPM",
                    "permission": "VISIT_MAP",
                    "friendlyName": "Visit Map"
                },
                {
                    "canHaveCount": false,
                    "description": "Release a player from jail",
                    "permission": "RELEASE",
                    "friendlyName": "Release Jail"
                },
                {
                    "canHaveCount": false,
                    "description": "Set the location of your jail ",
                    "permission": "SET_JAIL",
                    "friendlyName": "Set Jail Location"
                },
                {
                    "canHaveCount": false,
                    "description": "Buff another player",
                    "permission": "BUFF",
                    "friendlyName": "Buff"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset Chunks Permission",
                    "permission": "RESET_CHUNKS",
                    "friendlyName": "Rest Chunks"
                },
                {
                    "canHaveCount": false,
                    "description": "Wipe Inventory",
                    "permission": "WIPE_INVENTORY",
                    "friendlyName": "Wipe Inventory"
                },
                {
                    "canHaveCount": false,
                    "description": "Commands for staff to use without using Currency",
                    "permission": "STAFF_COMMANDS",
                    "friendlyName": "Staff Commands"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset prefab permission",
                    "permission": "RESET_PREFAB",
                    "friendlyName": "Reset Prefabs"
                }
            ]
        },
        {
            "tag": "0.0.4",
            "description": "# MAD_CPMStaffCommands Module",
            "configSchema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"userDiscordChannel\"],\"additionalProperties\":false,\"properties\":{\"userDiscordChannel\":{\"title\":\"userDiscordChannel\",\"description\":\"Sends to discord\",\"default\":\"\",\"type\":\"string\"},\"droneReplacement\":{\"title\":\"Items\",\"description\":\"Gives a drone and some extra mods\",\"x-component\":\"item\",\"type\":\"array\",\"uniqueItems\":true,\"items\":{\"type\":\"object\",\"title\":\"Item\",\"properties\":{\"item\":{\"type\":\"string\",\"title\":\"Item\"},\"amount\":{\"type\":\"number\",\"title\":\"Amount\"},\"quality\":{\"type\":\"string\",\"title\":\"Quality\"}}}},\"moduleLookUp\":{\"title\":\"moduleLookUp\",\"description\":\"Uuid of the staff command module\",\"default\":\"\",\"type\":\"string\"}}}",
            "uiSchema": "{\"droneReplacement\":{\"items\":{\"item\":{\"ui:widget\":\"item\"}}}}",
            "commands": [
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mv \"${player.name}\" \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    // Send success message to the player\n    await player.pm(`Successfully teleported to [02FEDC]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "avisit",
                    "description": null,
                    "trigger": "avisit",
                    "helpText": "[70FE02](player name)[-] - Lets you visit a player bypassing needing to be friends and does NOT use Twinkies",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player teleporting to",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'RESET_PLAYER')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `reset_player_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the reset command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `rpd ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have reset [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to reset [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "rpd",
                    "description": null,
                    "trigger": "rpd",
                    "helpText": "[02FEDC]rpd (player name) Resets a player's data. Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "the player's data you are resetting",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ban add ${targetPerson} 1 year ${targetReasoning} ${targetPerson}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was banned.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `üî® ${player.name} banned ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "ban",
                    "description": null,
                    "trigger": "ban",
                    "helpText": "[70FE02](player name) (reason in quotes)[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "contact a moderator for the reason",
                            "helpText": "Reason they are banned",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person being banned",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const skillPoints = data.arguments.playerTargetLevel;\n    const pname = data.arguments.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rs  \"${data.arguments.playerTargetName}\" ${data.arguments.playerTargetLevel}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}[-] skill points to [70FE02]${skillPoints}[-]`);\n}\n\nawait main();",
                    "name": "restoreS",
                    "description": null,
                    "trigger": "restoreS",
                    "helpText": "restoreS (name) (amount) - sets a players skilll points to the amount",
                    "arguments": [
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players name",
                            "position": 0
                        },
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players skill points",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetPerson} false`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was unmuted.`);\n\n}\n\nawait main();",
                    "name": "unmute",
                    "description": null,
                    "trigger": "unmute",
                    "helpText": "[02FEDC]unmute (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "player to be unmuted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_PREFAB')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Prefabs[-].');\n    };\n\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `Expect lag. A POI is being reset`,\n    });\n\n    await player.pm(`[EA899A]Resetting prefab[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `getprefab EOS_${player.epicOnlineServicesId} reset`,\n    });\n\n    await player.pm(`[EA899A]Prefab was[-] [ADDFB3]reset[-]`);\n}\nawait main();",
                    "name": "pr",
                    "description": null,
                    "trigger": "pr",
                    "helpText": "Reset the POI you are standing in",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `teleportplayer ${targetArg} ${player.name}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "pull",
                    "description": null,
                    "trigger": "pull",
                    "helpText": "[70FE02](name)[-] - Pull a player to you. Use if /get isn't working",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'ZOMB_FREE_SELF')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Zombie Free[-] [ADDFB3]for you![-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_HF\" 0 hostilefree`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n    // Execute the command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_Normal\" 400`\n    });\n\n    // Search for the adminMode variable\n    const zombFreeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['zombFreeVariable'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (zombFreeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(zombFreeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(zombFreeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'zombFreeVariable',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "zomb",
                    "description": null,
                    "trigger": "zomb",
                    "helpText": "[02FEDC]Stand directly above your land claim when you run this command!!!!!![-] ",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    // Check Permissions\n    if (!checkPermission(pog, 'CM_DM')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Admin[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Admin Mode[-] [ADDFB3]TOGGLED[-]`);\n\n    // Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"dm\"`,\n    });\n\n    // Execute the command CM\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"cm\"`,\n    });\n\n    // --- Variable Logic ---\n\n    // Search for the adminMode variable\n    const adminModeVariable = (\n        await takaro.variable.variableControllerSearch({\n            filters: {\n                key: ['adminMode'],\n                moduleId: [mod.moduleId],\n                playerId: [player.id],\n                gameServerId: [gameServerId],\n            },\n        })\n    ).data.data[0];\n\n    if (adminModeVariable) {\n        // The variable already exists, increment its value\n        const currentValue = parseInt(adminModeVariable.value, 10);\n        const newValue = currentValue + 1;\n\n        // Check if the new value has reached the limit of 5\n        if (newValue >= 5) {\n            // Define the role to be removed\n            const roleId = `392e74ed-5cb8-4f9e-80a3-809b1096a5fa`;\n            const playerIDs = data.player.id\n            // Remove the role from the player\n            await takaro.player.playerControllerRemoveRole(playerIDs, roleId);\n            // Delete the variable to reset the count\n            await takaro.variable.variableControllerDelete(adminModeVariable.id);\n\n            // ** Inform the player with the new message **\n            await player.pm('[FF6347]Your CM role has been removed. Please DM Mad to resolve the issue.[-]');\n\n        } else {\n            // If the limit is not reached, just update the count\n            await takaro.variable.variableControllerUpdate(adminModeVariable.id, {\n                value: newValue.toString(),\n            });\n        }\n    } else {\n        // The variable doesn't exist, so create it for the first time\n        const expiresAt = new Date();\n        expiresAt.setHours(expiresAt.getHours() + 24); // Set expiration for 24 hours from now\n\n        await takaro.variable.variableControllerCreate({\n            key: 'adminMode',\n            value: '1', // Start the count at 1\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n            expiresAt: expiresAt.toISOString(), // Add the expiration date\n        });\n    }\n}\n\nawait main();",
                    "name": "cm  & dm",
                    "description": null,
                    "trigger": "am",
                    "helpText": "Creative mode and debug menu. Reserved for admins. Excessive use will remove the ability to use it.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rvr ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]Successfully removed [02FEDC]${playerTarget}'s[-] vending machine rental[-]`);\n}\n\nawait main();",
                    "name": "rvr",
                    "description": null,
                    "trigger": "rvr",
                    "helpText": "[02FEDC]rvr (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}[-] [02FEDC]has a horde coming at them. Grab some popcorn and enjoy the show![-]`);\n}\n\nawait main();",
                    "name": "th - 1",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Send a horde in 4 intervals in 30 seconds at a player. Type /th (name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person you're sending the horde after",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const level = args.playerTargetLevel;\n    const pname = args.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rl \"${data.arguments.playerTargetName}\" ${data.arguments.playerTargetLevel}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}[-] level to [70FE02]${level}[-]`);\n}\n\nawait main();",
                    "name": "restoreL",
                    "description": null,
                    "trigger": "restoreL",
                    "helpText": "Type /restoreL (name) (level) - Sets players level",
                    "arguments": [
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players level",
                            "position": 1
                        },
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Players Name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const pname = args.pname\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const newName = /\\s/.test(pname) ? `\"${pname}\"` : pname;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ocn ${targetArg} ${newName}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}'s[-] [02FEDC]name was set to ${pname} in chat.[-]`);\n}\n\nawait main();\n// ocn <steamId / entityId / playerName> <newName>\n// ocn <steamId / entityId / playerName> clear\n// ocn list",
                    "name": "ocn",
                    "description": null,
                    "trigger": "ocn",
                    "helpText": "[70FE02](Name) (New Name)[-] - Change a player's name in chat.",
                    "arguments": [
                        {
                            "name": "pname",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "new name",
                            "position": 1
                        },
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `debuffplayer ${targetArg} god`,\n    });;\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[ADDFB3]Your powers have stopped. Thanks for playing [FF6D6A]Double Tap[-][-]\"`,\n    });\n\n}\n\nawait main();\n",
                    "name": "buff - 2",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "Ends players buff",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `kick ${targetPerson} ${targetReasoning}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was kicked.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü•æ ${player.name} kicked ${person} for ${reasoning}`,\n    });\n}\n\nawait main();",
                    "name": "kick",
                    "description": null,
                    "trigger": "kick",
                    "helpText": "[70FE02](player name) (reason in quotes)[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "Contact a moderator for a kick reason",
                            "helpText": "Reason for being kicked",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player getting kicked",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'MUTE')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetArg} true`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was muted.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü§ê ${player.name} muted ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "mute",
                    "description": null,
                    "trigger": "mute",
                    "helpText": "[02FEDMute (player name) (reason in quotes)[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "No reason given",
                            "helpText": "Reason they were muted",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person to be muted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 2",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Second round of a targeted horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'RDD')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Drone Data[-].');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rdd ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "rdd",
                    "description": null,
                    "trigger": "rdd",
                    "helpText": "[70FE02](player name)[-] - fixes max drones deployed. Kicks Player",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person drone data is being reset for",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kick Everyone[-].');\n    };\n\n    const message = \"Doing a server restart. The server will be back up in a minute.\"\n\n    const targetMessage = /\\s/.test(message) ? `\"${message}\"` : message;\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `kickall ${targetMessage}`,\n    });\n\n}\nawait main();",
                    "name": "kickall",
                    "description": null,
                    "trigger": "kickall",
                    "helpText": "Kicks all of the players off of the server",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `buffplayer ${targetArg} god`,\n    });\n\n    //PM player to nitify them of thebuff\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[02FEDC]Mad[-][-] grants you God like power for [FF0507]2[-] [4FFF00]min![-]\"`,\n    });\n\n    //Notify sender of buff\n    await player.pm(`[ADDFB3]You have successfully buffed [B1A2CA]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "buff - 1",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "[70FE02](player name)[-] - Gives the player god mode for a few minutes",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "playerTarget",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const tool = args.tool\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'WIPE_INVENTORY')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]wipe inventories[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `wi ${targetArg} ${tool}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}'s[-] [EA899A]${tool} was wiped.[-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "wi",
                    "description": null,
                    "trigger": "wi",
                    "helpText": "Wipe a player's belt, bag, equipment, all",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person",
                            "position": 0
                        },
                        {
                            "name": "tool",
                            "type": "string",
                            "defaultValue": "belt",
                            "helpText": "belt, bag, equipment, all",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, module: mod, pog } = data;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const itemList = mod.userConfig.droneReplacement;\n\n    if (!itemList || !Array.isArray(itemList) || itemList.length === 0) {\n        await player.pm('The drone replacement kit is empty. Please contact an administrator.');\n        return;\n    }\n\n    await player.pm('Replacing your drone inventory...');\n\n    // Loop through the list of items to give\n    for (const itemEntry of itemList) {\n        if (!itemEntry || !itemEntry.item) {\n            console.log('Skipping invalid item entry in droneReplacement list.');\n            continue;\n        }\n\n        try {\n            // Find the item details using the item ID from the config\n            const itemDetails = (await takaro.item.itemControllerFindOne(itemEntry.item)).data.data;\n            const itemName = itemDetails.name;\n            const itemCode = itemDetails.id;\n            const amount = itemEntry.amount || 1;\n            const quality = itemEntry.quality || '';\n\n            // Give the item to the player\n            await takaro.gameserver.gameServerControllerGiveItem(gameServerId, player.id, {\n                name: itemCode,\n                amount: amount,\n                quality: quality,\n            });\n\n            // Notify the player\n            await player.pm(`You received: ${amount}x ${itemName}`);\n\n        } catch (error) {\n            console.error(`Failed to give item with ID ${itemEntry.item}:`, error);\n            await player.pm(`There was an error giving you an item (${itemEntry.item}). Please notify an admin.`);\n        }\n    }\n\n    await player.pm('Drone inventory replacement complete!');\n}\n\nawait main();\n",
                    "name": "replace",
                    "description": null,
                    "trigger": "replace",
                    "helpText": "replace - gives a patreon drone and 8 cargo mos",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog } = data;\n\n    if (!checkPermission(pog, 'VISIT_MAP')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Beginning to visit the map[-]`);\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `visitmap full`,\n    });\n}\n\n\nawait main();",
                    "name": "visitmap",
                    "description": null,
                    "trigger": "visitmap",
                    "helpText": "[02FEDC]Open the map for Takaro and CPM.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'SET_JAIL')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Jail[-] [ADDFB3]was set! 11x11 area. Use /arrest (players name) to arrest them[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 5 EOS_${player.epicOnlineServicesId} jail 0 reversed`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n}\nawait main();",
                    "name": "setjail",
                    "description": null,
                    "trigger": "setjail",
                    "helpText": "[02FEDC]Set an 11x11 area to put hail birds in.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 4",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Fourth round of Targeted Horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const reasoning = args.reasoning\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `arrest ${targetArg}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}[-] [EA899A]was arrested for ${reasoning}[-]`,\n    });\n    //Discord Channel Configuration\n    const userDiscord = data.module.userConfig.userDiscordChannel;\n    //Send it to Discord\n    await takaro.discord.discordControllerSendMessage(userDiscord, {\n        message: `${player.name} arrested ${playerTarget} for ${reasoning}`,\n    });\n};\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "arrest",
                    "description": null,
                    "trigger": "arrest",
                    "helpText": "[70FE02]arrest (player name) \"(reason for arrest)\"[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "\"Contact a moderator to be released\"",
                            "helpText": "Reason",
                            "position": 1
                        },
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Other player's name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog, arguments: args } = data;\n    const timer = args.timer\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Shutdown the server[-].');\n    };\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `shutdownba ${timer}`,\n    });\n\n}\nawait main();",
                    "name": "shutdownba",
                    "description": null,
                    "trigger": "shutdownba",
                    "helpText": "No help text available",
                    "arguments": [
                        {
                            "name": "timer",
                            "type": "number",
                            "defaultValue": "10",
                            "helpText": "minutes till shutdown",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `kill_confirmation_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the kill command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `kill ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have killed [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to kill [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "kill",
                    "description": null,
                    "trigger": "kill",
                    "helpText": "[70FE02](players name)[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "The player you want to kill",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `release ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[B1A2CA]${playerTarget}[-]'s name wasn't spelled correctly or is phone! Use quotes if their name has spaces!`)\n    };\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[FF6D6A]${args.playerTarget}[-] [EA899A]has been released. Please follow the rules![-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "release",
                    "description": null,
                    "trigger": "release",
                    "helpText": "[02FEDC]release (player name)[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player that's released",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 3",
                    "description": null,
                    "trigger": "th",
                    "helpText": "Targeted Horde round 3",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function extractPermissionIds() {\n    const pog = data;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    try {\n        // Try using direct search which seems more reliable based on the logs\n        const directResponse = await takaro.role.roleControllerSearch({\n            filters: {\n                id: ['3ca7484e-5656-4474-897e-db149b732273']\n            }\n        });\n\n        // Check if we got role data\n        if (directResponse.data &&\n            directResponse.data.data &&\n            directResponse.data.data.length > 0 &&\n            directResponse.data.data[0].permissions) {\n\n            const permissions = directResponse.data.data[0].permissions;\n\n            // Extract all permission IDs into an array\n            const permissionIds = permissions\n                .filter(permData => permData.permission && permData.permission.id)\n                .map(permData => permData.permission.id);\n\n            // Output all IDs as a single array on one line\n            console.log(permissionIds);\n\n            return permissionIds.length;\n        }\n\n        console.log([]);\n        return 0;\n\n    } catch (error) {\n        console.error(`Error extracting permission IDs: ${error.message}`);\n        console.log([]);\n        return 0;\n    }\n}\n\n// Execute the function\nasync function main() {\n    try {\n        await extractPermissionIds();\n    } catch (error) {\n        console.log([]);\n    }\n}\n\n\n\nawait main();",
                    "name": "setwaypointpublic",
                    "description": null,
                    "trigger": "setwaypointpublic",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data } from '@takaro/helpers';\n\nasync function main() {\n    const { player } = data;\n    const modId = data.module.userConfig.moduleLookUp;\n    const commandArg = data.arguments.commandName;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    if (commandArg === 'all') {\n        for (const command of commands) {\n            await player.pm(`[E9EC6B]${command.trigger}[-] [8BD3E6]${command.helpText}[-]`);\n        }\n    } else {\n        const foundCommand = commands.find(cmd => cmd.trigger === commandArg);\n        await player.pm(`[E9EC6B]${foundCommand.trigger}[-] [8BD3E6]${foundCommand.helpText}[-]`);\n    }\n}\n\nawait main();",
                    "name": "admin",
                    "description": null,
                    "trigger": "admin",
                    "helpText": "A list of admin help commands for admins.",
                    "arguments": [
                        {
                            "name": "commandName",
                            "type": "string",
                            "defaultValue": "all",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kill All[-].');\n    };\n\n    await player.pm(`[EA899A]Killed all of the zeds on the server[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `killall`,\n    });\n\n}\nawait main();",
                    "name": "killall",
                    "description": null,
                    "trigger": "killall",
                    "helpText": "[02FEDC]Kill all of the Zeds on the server.[-]",
                    "arguments": []
                }
            ],
            "hooks": [],
            "cronJobs": [],
            "functions": [],
            "permissions": [
                {
                    "canHaveCount": false,
                    "description": "Kill a player",
                    "permission": "KILL_PLAYER",
                    "friendlyName": "Kill player"
                },
                {
                    "canHaveCount": false,
                    "description": "Creative mode and debug menu",
                    "permission": "CM_DM",
                    "friendlyName": "Admin Menu"
                },
                {
                    "canHaveCount": false,
                    "description": "Mute unruly players in game",
                    "permission": "MUTE",
                    "friendlyName": "Mute a Player"
                },
                {
                    "canHaveCount": false,
                    "description": "Zombie free command for admins to run the command for their personal house",
                    "permission": "ZOMB_FREE_SELF",
                    "friendlyName": "Zombie Free Self"
                },
                {
                    "canHaveCount": false,
                    "description": "Lists land claims near by",
                    "permission": "LIST_LANDCLAIMS",
                    "friendlyName": "List Land Claims nearby"
                },
                {
                    "canHaveCount": false,
                    "description": "remove nearby land claims",
                    "permission": "REMOVE_LANDCLAIMS",
                    "friendlyName": "Remove land claims"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets a player's corrupted data",
                    "permission": "RESET_PLAYER",
                    "friendlyName": "Reset Player Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets player drone data to place a new one",
                    "permission": "RDD",
                    "friendlyName": "Reset Drone Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Unmute a player",
                    "permission": "UNMUTE",
                    "friendlyName": "Unmute"
                },
                {
                    "canHaveCount": false,
                    "description": "Visit the map to unlock for Takaro and CPM",
                    "permission": "VISIT_MAP",
                    "friendlyName": "Visit Map"
                },
                {
                    "canHaveCount": false,
                    "description": "Release a player from jail",
                    "permission": "RELEASE",
                    "friendlyName": "Release Jail"
                },
                {
                    "canHaveCount": false,
                    "description": "Set the location of your jail ",
                    "permission": "SET_JAIL",
                    "friendlyName": "Set Jail Location"
                },
                {
                    "canHaveCount": false,
                    "description": "Buff another player",
                    "permission": "BUFF",
                    "friendlyName": "Buff"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset Chunks Permission",
                    "permission": "RESET_CHUNKS",
                    "friendlyName": "Rest Chunks"
                },
                {
                    "canHaveCount": false,
                    "description": "Wipe Inventory",
                    "permission": "WIPE_INVENTORY",
                    "friendlyName": "Wipe Inventory"
                },
                {
                    "canHaveCount": false,
                    "description": "Commands for staff to use without using Currency",
                    "permission": "STAFF_COMMANDS",
                    "friendlyName": "Staff Commands"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset prefab permission",
                    "permission": "RESET_PREFAB",
                    "friendlyName": "Reset Prefabs"
                }
            ]
        },
        {
            "tag": "0.0.5",
            "description": "# MAD_CPMStaffCommands Module",
            "configSchema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"userDiscordChannel\"],\"additionalProperties\":false,\"properties\":{\"userDiscordChannel\":{\"title\":\"userDiscordChannel\",\"description\":\"Sends to discord\",\"default\":\"\",\"type\":\"string\"},\"droneReplacement\":{\"title\":\"Items\",\"description\":\"Gives a drone and some extra mods\",\"x-component\":\"item\",\"type\":\"array\",\"uniqueItems\":true,\"items\":{\"type\":\"object\",\"title\":\"Item\",\"properties\":{\"item\":{\"type\":\"string\",\"title\":\"Item\"},\"amount\":{\"type\":\"number\",\"title\":\"Amount\"},\"quality\":{\"type\":\"string\",\"title\":\"Quality\"}}}},\"moduleLookUp\":{\"title\":\"moduleLookUp\",\"description\":\"Uuid of the staff command module\",\"default\":\"\",\"type\":\"string\"}}}",
            "uiSchema": "{\"droneReplacement\":{\"items\":{\"item\":{\"ui:widget\":\"item\"}}}}",
            "commands": [
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_PREFAB')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Prefabs[-].');\n    };\n\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `Expect lag. A POI is being reset`,\n    });\n\n    await player.pm(`[EA899A]Resetting prefab[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `getprefab EOS_${player.epicOnlineServicesId} reset`,\n    });\n\n    await player.pm(`[EA899A]Prefab was[-] [ADDFB3]reset[-]`);\n}\nawait main();",
                    "name": "pr",
                    "description": null,
                    "trigger": "pr",
                    "helpText": "Reset the POI you are standing in",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mv \"${player.name}\" \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    // Send success message to the player\n    await player.pm(`Successfully teleported to [02FEDC]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "avisit",
                    "description": null,
                    "trigger": "avisit",
                    "helpText": "[70FE02](name)[-] - Lets you visit a player bypassing needing to be friends and does NOT use Twinkies",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player teleporting to",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 4",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'MUTE')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetArg} true`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was muted.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü§ê ${player.name} muted ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "mute",
                    "description": null,
                    "trigger": "mute",
                    "helpText": "[70FE02](name) \"(reason)\"[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "No reason given",
                            "helpText": "Reason they were muted",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person to be muted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ban add ${targetPerson} 1 year ${targetReasoning} ${targetPerson}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was banned.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `üî® ${player.name} banned ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "ban",
                    "description": null,
                    "trigger": "ban",
                    "helpText": "[70FE02](name) (reason)[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person being banned",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "contact a moderator for the reason",
                            "helpText": "Reason they are banned",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const level = args.playerTargetLevel;\n    const pname = args.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rl \"${pname}\" ${level}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}'s[-] level to [70FE02]${level}[-]`);\n}\n\nawait main();",
                    "name": "restoreL",
                    "description": null,
                    "trigger": "restoreL",
                    "helpText": "[70FE02](name) (level)[-] - Sets players level",
                    "arguments": [
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players level",
                            "position": 1
                        },
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Players Name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `teleportplayer ${targetArg} ${player.name}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "pull",
                    "description": null,
                    "trigger": "pull",
                    "helpText": "[70FE02](name)[-] - Pull a player to you. Use if /get isn't working",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 2",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `release ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[B1A2CA]${playerTarget}[-]'s name wasn't spelled correctly or is phone! Use quotes if their name has spaces!`)\n    };\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[FF6D6A]${args.playerTarget}[-] [EA899A]has been released. Please follow the rules![-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "release",
                    "description": null,
                    "trigger": "release",
                    "helpText": "[70FE02](name)[-] - releases from jail",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player that's released",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kill All[-].');\n    };\n\n    await player.pm(`[EA899A]Killed all of the zeds on the server[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `killall`,\n    });\n\n}\nawait main();",
                    "name": "killall",
                    "description": null,
                    "trigger": "killall",
                    "helpText": "Kill all of the Zeds on the server.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Administration[-] commmands. Staff has been notified and will be coming for you.');\n    }\n\n    const nameOfCommand = `bundo`\n\n    await player.pm(`[EA899A]${nameOfCommand}[-] [ADDFB3]needs to be done in the f1 console! use /help ${nameOfCommand} for instructions.[-]`);\n\n}\nawait main();",
                    "name": "bundo",
                    "description": null,
                    "trigger": "bundo",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'RESET_PLAYER')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `reset_player_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the reset command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `rpd ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have reset [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to reset [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "rpd",
                    "description": null,
                    "trigger": "rpd",
                    "helpText": "[70FE02](name)[-] - Resets a player back to day 1",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "the player's data you are resetting",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const tool = args.tool\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'WIPE_INVENTORY')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]wipe inventories[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `wi ${playerTarget} ${tool}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}'s[-] [EA899A]${tool} was wiped.[-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "wi",
                    "description": null,
                    "trigger": "wi",
                    "helpText": "[70FE02](name) <[bag] [belt] [equipment] [all]>[-] - wipes inventory of chosen option. Bag = inventory",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person",
                            "position": 0
                        },
                        {
                            "name": "tool",
                            "type": "string",
                            "defaultValue": "belt",
                            "helpText": "belt, bag, equipment, all",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    // Check Permissions\n    if (!checkPermission(pog, 'CM_DM')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Admin[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Admin Mode[-] [ADDFB3]TOGGLED[-]`);\n\n    // Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"dm\"`,\n    });\n\n    // Execute the command CM\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"cm\"`,\n    });\n\n    // --- Variable Logic ---\n\n    // Search for the adminMode variable\n    const adminModeVariable = (\n        await takaro.variable.variableControllerSearch({\n            filters: {\n                key: ['adminMode'],\n                moduleId: [mod.moduleId],\n                playerId: [player.id],\n                gameServerId: [gameServerId],\n            },\n        })\n    ).data.data[0];\n\n    if (adminModeVariable) {\n        // The variable already exists, increment its value\n        const currentValue = parseInt(adminModeVariable.value, 10);\n        const newValue = currentValue + 1;\n\n        // Check if the new value has reached the limit of 5\n        if (newValue >= 5) {\n            // Define the role to be removed\n            const roleId = `392e74ed-5cb8-4f9e-80a3-809b1096a5fa`;\n            const playerIDs = data.player.id\n            // Remove the role from the player\n            await takaro.player.playerControllerRemoveRole(playerIDs, roleId);\n            // Delete the variable to reset the count\n            await takaro.variable.variableControllerDelete(adminModeVariable.id);\n\n            // ** Inform the player with the new message **\n            await player.pm('[FF6347]Your CM role has been removed. Please DM Mad to resolve the issue.[-]');\n\n        } else {\n            // If the limit is not reached, just update the count\n            await takaro.variable.variableControllerUpdate(adminModeVariable.id, {\n                value: newValue.toString(),\n            });\n        }\n    } else {\n        // The variable doesn't exist, so create it for the first time\n        const expiresAt = new Date();\n        expiresAt.setHours(expiresAt.getHours() + 24); // Set expiration for 24 hours from now\n\n        await takaro.variable.variableControllerCreate({\n            key: 'adminMode',\n            value: '1', // Start the count at 1\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n            expiresAt: expiresAt.toISOString(), // Add the expiration date\n        });\n    }\n}\n\nawait main();",
                    "name": "am",
                    "description": null,
                    "trigger": "am",
                    "helpText": "Creative mode and debug menu. Reserved for admins. Excessive use will remove the ability to use it.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const pname = args.pname\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const newName = /\\s/.test(pname) ? `\"${pname}\"` : pname;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ocn ${targetArg} ${newName}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}'s[-] [02FEDC]name was set to ${pname} in chat.[-]`);\n}\n\nawait main();\n// ocn <steamId / entityId / playerName> <newName>\n// ocn <steamId / entityId / playerName> clear\n// ocn list",
                    "name": "ocn",
                    "description": null,
                    "trigger": "ocn",
                    "helpText": "[70FE02](name) (new name)[-] - Change a player's name in chat.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target",
                            "position": 0
                        },
                        {
                            "name": "pname",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "new name",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'ZOMB_FREE_SELF')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Zombie Free[-] [ADDFB3]for you![-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_HF\" 0 hostilefree`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n    // Execute the command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_Normal\" 400`\n    });\n\n    // Search for the adminMode variable\n    const zombFreeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['zombFreeVariable'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (zombFreeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(zombFreeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(zombFreeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'zombFreeVariable',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "zomb",
                    "description": null,
                    "trigger": "zomb",
                    "helpText": "- Stand directly above your land claim when you run this command!",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog, module: mod, trigger } = data;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Administration[-] commmands. Staff has been notified and will be coming for you.');\n    }\n\n    const modId = mod.moduleId;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    // This uses your suggestion to find the command by the trigger from the data object.\n    const foundCommand = commands.find(cmd => cmd.trigger === trigger);\n\n    if (!foundCommand) {\n        throw new TakaroUserError(`Could not find a command with the trigger \"${trigger}\" in this module.`);\n    }\n\n    const helpText = foundCommand.helpText || 'No help text available for this command.';\n    await player.pm(`[E9EC6B]${foundCommand.trigger}[-] ${helpText}`);\n}\n\nawait main();",
                    "name": "brender",
                    "description": null,
                    "trigger": "brender",
                    "helpText": "[70FE02](programmed name of poi) (rotation) (height)[-] - only works in the console (f1 menu)/ Do not fly. use blocks to mark position. [02FEDC]bundo[-] to undo.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `buffplayer ${targetArg} god`,\n    });\n\n    //PM player to nitify them of thebuff\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[02FEDC]Mad[-][-] grants you God like power for [FF0507]2[-] [4FFF00]min![-]\"`,\n    });\n\n    //Notify sender of buff\n    await player.pm(`[ADDFB3]You have successfully buffed [B1A2CA]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "buff - 1",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "[70FE02](player name)[-] - Gives the player god mode for a few minutes",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "playerTarget",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rvr \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]Successfully removed [02FEDC]${playerTarget}'s[-] vending machine rental[-]`);\n}\n\nawait main();",
                    "name": "rvr",
                    "description": null,
                    "trigger": "rvr",
                    "helpText": "[70FE02](name)[-] - Resets a vending rental for a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog } = data;\n\n    if (!checkPermission(pog, 'VISIT_MAP')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Beginning to visit the map[-]`);\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `visitmap full`,\n    });\n}\n\n\nawait main();",
                    "name": "visitmap",
                    "description": null,
                    "trigger": "visitmap",
                    "helpText": "Open the map for Takaro and CPM.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const skillPoints = data.arguments.playerTargetLevel;\n    const pname = data.arguments.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rs  \"${pname}\" ${skillPoints}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}'s[-] skill points to [70FE02]${skillPoints}[-]`);\n}\n\nawait main();",
                    "name": "restoreS",
                    "description": null,
                    "trigger": "restoreS",
                    "helpText": "[70FE02](name) (amount)[-] - sets a players skilll points to the amount",
                    "arguments": [
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players skill points",
                            "position": 1
                        },
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function extractPermissionIds() {\n    const pog = data;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    try {\n        // Try using direct search which seems more reliable based on the logs\n        const directResponse = await takaro.role.roleControllerSearch({\n            filters: {\n                id: ['3ca7484e-5656-4474-897e-db149b732273']\n            }\n        });\n\n        // Check if we got role data\n        if (directResponse.data &&\n            directResponse.data.data &&\n            directResponse.data.data.length > 0 &&\n            directResponse.data.data[0].permissions) {\n\n            const permissions = directResponse.data.data[0].permissions;\n\n            // Extract all permission IDs into an array\n            const permissionIds = permissions\n                .filter(permData => permData.permission && permData.permission.id)\n                .map(permData => permData.permission.id);\n\n            // Output all IDs as a single array on one line\n            console.log(permissionIds);\n\n            return permissionIds.length;\n        }\n\n        console.log([]);\n        return 0;\n\n    } catch (error) {\n        console.error(`Error extracting permission IDs: ${error.message}`);\n        console.log([]);\n        return 0;\n    }\n}\n\n// Execute the function\nasync function main() {\n    try {\n        await extractPermissionIds();\n    } catch (error) {\n        console.log([]);\n    }\n}\n\n\n\nawait main();",
                    "name": "setwaypointpublic",
                    "description": null,
                    "trigger": "setwaypointpublic",
                    "helpText": "[70FE02](waypoint name)[-] - sets a waypoint public",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog, arguments: args } = data;\n    const timer = args.timer\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Shutdown the server[-].');\n    };\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `shutdownba ${timer}`,\n    });\n\n}\nawait main();",
                    "name": "restart",
                    "description": null,
                    "trigger": "restart",
                    "helpText": "[70FE02](minutes)[-] - starts a server restart.",
                    "arguments": [
                        {
                            "name": "timer",
                            "type": "number",
                            "defaultValue": "10",
                            "helpText": "minutes till shutdown",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'SET_JAIL')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Jail[-] [ADDFB3]was set! 11x11 area. Use /arrest (players name) to arrest them[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 5 EOS_${player.epicOnlineServicesId} jail 0 reversed`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n}\nawait main();",
                    "name": "setjail",
                    "description": null,
                    "trigger": "setjail",
                    "helpText": "- Set an 11x11 area to put jail birds in.",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `kill_confirmation_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the kill command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `kill ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have killed [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to kill [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "kill",
                    "description": null,
                    "trigger": "kill",
                    "helpText": "[70FE02](players name)[-] - Will kill the player. must be ran twice to be confirmed.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "The player you want to kill",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kick Everyone[-].');\n    };\n\n    const message = \"Doing a server restart. The server will be back up in a minute.\"\n\n    const targetMessage = /\\s/.test(message) ? `\"${message}\"` : message;\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `kickall ${targetMessage}`,\n    });\n\n}\nawait main();",
                    "name": "kickall",
                    "description": null,
                    "trigger": "kickall",
                    "helpText": "Kicks all of the players off of the server",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person } = args;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetPerson} false`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was unmuted.`);\n\n}\n\nawait main();",
                    "name": "unmute",
                    "description": null,
                    "trigger": "unmute",
                    "helpText": "[70FE02](name)[-] - Unmute player",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "player to be unmuted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, module: mod, pog } = data;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const itemList = mod.userConfig.droneReplacement;\n\n    if (!itemList || !Array.isArray(itemList) || itemList.length === 0) {\n        await player.pm('The drone replacement kit is empty. Please contact an administrator.');\n        return;\n    }\n\n    await player.pm('Replacing your drone inventory...');\n\n    // Loop through the list of items to give\n    for (const itemEntry of itemList) {\n        if (!itemEntry || !itemEntry.item) {\n            console.log('Skipping invalid item entry in droneReplacement list.');\n            continue;\n        }\n\n        try {\n            // Find the item details using the item ID from the config\n            const itemDetails = (await takaro.item.itemControllerFindOne(itemEntry.item)).data.data;\n            const itemName = itemDetails.name;\n            const itemCode = itemDetails.id;\n            const amount = itemEntry.amount || 1;\n            const quality = itemEntry.quality || '';\n\n            // Give the item to the player\n            await takaro.gameserver.gameServerControllerGiveItem(gameServerId, player.id, {\n                name: itemCode,\n                amount: amount,\n                quality: quality,\n            });\n\n            // Notify the player\n            await player.pm(`You received: ${amount}x ${itemName}`);\n\n        } catch (error) {\n            console.error(`Failed to give item with ID ${itemEntry.item}:`, error);\n            await player.pm(`There was an error giving you an item (${itemEntry.item}). Please notify an admin.`);\n        }\n    }\n\n    await player.pm('Drone inventory replacement complete!');\n}\n\nawait main();\n",
                    "name": "replace",
                    "description": null,
                    "trigger": "replace",
                    "helpText": "Gives a patreon drone and 8 cargo mos",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 3",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'RDD')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Drone Data[-].');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rdd ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "rdd",
                    "description": null,
                    "trigger": "rdd",
                    "helpText": "[70FE02](name)[-] - fixes max drones deployed. Kicks Player",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person drone data is being reset for",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `debuffplayer ${targetArg} god`,\n    });;\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[ADDFB3]Your powers have stopped. Thanks for playing [FF6D6A]Double Tap[-][-]\"`,\n    });\n\n}\n\nawait main();\n",
                    "name": "buff - 2",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "Ends players buff",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog, arguments: args } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Administration[-] commmands. Staff has been notified and will be coming for you.');\n    }\n\n    // Use the ID of the current module directly.\n    const modId = data.module.module.id;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    if (args.commandName === 'all') {\n        for (const command of commands) {\n            await player.pm(`[E9EC6B]${command.trigger}[-] ${command.helpText}`);\n        }\n    } else {\n        const foundCommand = commands.find(cmd => cmd.trigger === args.commandName);\n        await player.pm(`[E9EC6B]${foundCommand.trigger}[-] ${foundCommand.helpText}`);\n    }\n}\n\nawait main();",
                    "name": "admin",
                    "description": null,
                    "trigger": "admin",
                    "helpText": "A list of admin help commands for admins. [70FE02](name of command)[-] for help with a specific command",
                    "arguments": [
                        {
                            "name": "commandName",
                            "type": "string",
                            "defaultValue": "all",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `kick ${targetPerson} ${targetReasoning}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was kicked.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü•æ ${player.name} kicked ${person} for ${reasoning}`,\n    });\n}\n\nawait main();",
                    "name": "kick",
                    "description": null,
                    "trigger": "kick",
                    "helpText": "[70FE02](player name) (reason in quotes)[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player getting kicked",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "Contact a moderator for a kick reason",
                            "helpText": "Reason for being kicked",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const reasoning = args.reasoning\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `arrest ${targetArg}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}[-] [EA899A]was arrested for ${reasoning}[-]`,\n    });\n    //Discord Channel Configuration\n    const userDiscord = data.module.userConfig.userDiscordChannel;\n    //Send it to Discord\n    await takaro.discord.discordControllerSendMessage(userDiscord, {\n        message: `${player.name} arrested ${playerTarget} for ${reasoning}`,\n    });\n};\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "arrest",
                    "description": null,
                    "trigger": "arrest",
                    "helpText": "[70FE02](name) (reason)[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Other player's name",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "\"Contact a moderator to be released\"",
                            "helpText": "Reason",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}[-] [02FEDC]has a horde coming at them. Grab some popcorn and enjoy the show![-]`);\n}\n\nawait main();",
                    "name": "th - 1",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[70FE02](name)[-] Send a horde in 4 intervals in 30 seconds at a player.",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person you're sending the horde after",
                            "position": 0
                        }
                    ]
                }
            ],
            "hooks": [],
            "cronJobs": [],
            "functions": [],
            "permissions": [
                {
                    "canHaveCount": false,
                    "description": "Kill a player",
                    "permission": "KILL_PLAYER",
                    "friendlyName": "Kill player"
                },
                {
                    "canHaveCount": false,
                    "description": "Creative mode and debug menu",
                    "permission": "CM_DM",
                    "friendlyName": "Admin Menu"
                },
                {
                    "canHaveCount": false,
                    "description": "Mute unruly players in game",
                    "permission": "MUTE",
                    "friendlyName": "Mute a Player"
                },
                {
                    "canHaveCount": false,
                    "description": "Zombie free command for admins to run the command for their personal house",
                    "permission": "ZOMB_FREE_SELF",
                    "friendlyName": "Zombie Free Self"
                },
                {
                    "canHaveCount": false,
                    "description": "Lists land claims near by",
                    "permission": "LIST_LANDCLAIMS",
                    "friendlyName": "List Land Claims nearby"
                },
                {
                    "canHaveCount": false,
                    "description": "remove nearby land claims",
                    "permission": "REMOVE_LANDCLAIMS",
                    "friendlyName": "Remove land claims"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets a player's corrupted data",
                    "permission": "RESET_PLAYER",
                    "friendlyName": "Reset Player Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets player drone data to place a new one",
                    "permission": "RDD",
                    "friendlyName": "Reset Drone Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Unmute a player",
                    "permission": "UNMUTE",
                    "friendlyName": "Unmute"
                },
                {
                    "canHaveCount": false,
                    "description": "Visit the map to unlock for Takaro and CPM",
                    "permission": "VISIT_MAP",
                    "friendlyName": "Visit Map"
                },
                {
                    "canHaveCount": false,
                    "description": "Release a player from jail",
                    "permission": "RELEASE",
                    "friendlyName": "Release Jail"
                },
                {
                    "canHaveCount": false,
                    "description": "Set the location of your jail ",
                    "permission": "SET_JAIL",
                    "friendlyName": "Set Jail Location"
                },
                {
                    "canHaveCount": false,
                    "description": "Buff another player",
                    "permission": "BUFF",
                    "friendlyName": "Buff"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset Chunks Permission",
                    "permission": "RESET_CHUNKS",
                    "friendlyName": "Rest Chunks"
                },
                {
                    "canHaveCount": false,
                    "description": "Wipe Inventory",
                    "permission": "WIPE_INVENTORY",
                    "friendlyName": "Wipe Inventory"
                },
                {
                    "canHaveCount": false,
                    "description": "Commands for staff to use without using Currency",
                    "permission": "STAFF_COMMANDS",
                    "friendlyName": "Staff Commands"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset prefab permission",
                    "permission": "RESET_PREFAB",
                    "friendlyName": "Reset Prefabs"
                }
            ]
        },
        {
            "tag": "0.0.3",
            "description": "# MAD_CPMStaffCommands Module",
            "configSchema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"userDiscordChannel\"],\"additionalProperties\":false,\"properties\":{\"userDiscordChannel\":{\"title\":\"userDiscordChannel\",\"description\":\"Sends to discord\",\"default\":\"\",\"type\":\"string\"},\"droneReplacement\":{\"title\":\"Items\",\"description\":\"Gives a drone and some extra mods\",\"x-component\":\"item\",\"type\":\"array\",\"uniqueItems\":true,\"items\":{\"type\":\"object\",\"title\":\"Item\",\"properties\":{\"item\":{\"type\":\"string\",\"title\":\"Item\"},\"amount\":{\"type\":\"number\",\"title\":\"Amount\"},\"quality\":{\"type\":\"string\",\"title\":\"Quality\"}}}},\"moduleLookUp\":{\"title\":\"moduleLookUp\",\"description\":\"Uuid of the staff command module\",\"default\":\"7aabced7-efb1-4256-8b46-e5d79b0d26ad\",\"type\":\"string\"}}}",
            "uiSchema": "{\"droneReplacement\":{\"items\":{\"item\":{\"ui:widget\":\"item\"}}}}",
            "commands": [
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, module: mod, pog } = data;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const itemList = mod.userConfig.droneReplacement;\n\n    if (!itemList || !Array.isArray(itemList) || itemList.length === 0) {\n        await player.pm('The drone replacement kit is empty. Please contact an administrator.');\n        return;\n    }\n\n    await player.pm('Replacing your drone inventory...');\n\n    // Loop through the list of items to give\n    for (const itemEntry of itemList) {\n        if (!itemEntry || !itemEntry.item) {\n            console.log('Skipping invalid item entry in droneReplacement list.');\n            continue;\n        }\n\n        try {\n            // Find the item details using the item ID from the config\n            const itemDetails = (await takaro.item.itemControllerFindOne(itemEntry.item)).data.data;\n            const itemName = itemDetails.name;\n            const itemCode = itemDetails.id;\n            const amount = itemEntry.amount || 1;\n            const quality = itemEntry.quality || '';\n\n            // Give the item to the player\n            await takaro.gameserver.gameServerControllerGiveItem(gameServerId, player.id, {\n                name: itemCode,\n                amount: amount,\n                quality: quality,\n            });\n\n            // Notify the player\n            await player.pm(`You received: ${amount}x ${itemName}`);\n\n        } catch (error) {\n            console.error(`Failed to give item with ID ${itemEntry.item}:`, error);\n            await player.pm(`There was an error giving you an item (${itemEntry.item}). Please notify an admin.`);\n        }\n    }\n\n    await player.pm('Drone inventory replacement complete!');\n}\n\nawait main();\n",
                    "name": "replace",
                    "description": null,
                    "trigger": "replace",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'RESET_PLAYER')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `reset_player_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the reset command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `rpd ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have reset [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to reset [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "rpd",
                    "description": null,
                    "trigger": "rpd",
                    "helpText": "[02FEDC]rpd (player name) Resets a player's data. Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "the player's data you are resetting",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    // Check Permissions\n    if (!checkPermission(pog, 'CM_DM')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Admin[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Admin Mode[-] [ADDFB3]TOGGLED[-]`);\n\n    // Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"dm\"`,\n    });\n\n    // Execute the command CM\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"cm\"`,\n    });\n\n    // --- Variable Logic ---\n\n    // Search for the adminMode variable\n    const adminModeVariable = (\n        await takaro.variable.variableControllerSearch({\n            filters: {\n                key: ['adminMode'],\n                moduleId: [mod.moduleId],\n                playerId: [player.id],\n                gameServerId: [gameServerId],\n            },\n        })\n    ).data.data[0];\n\n    if (adminModeVariable) {\n        // The variable already exists, increment its value\n        const currentValue = parseInt(adminModeVariable.value, 10);\n        const newValue = currentValue + 1;\n\n        // Check if the new value has reached the limit of 5\n        if (newValue >= 5) {\n            // Define the role to be removed\n            const roleId = `392e74ed-5cb8-4f9e-80a3-809b1096a5fa`;\n            const playerIDs = data.player.id\n            // Remove the role from the player\n            await takaro.player.playerControllerRemoveRole(playerIDs, roleId);\n            // Delete the variable to reset the count\n            await takaro.variable.variableControllerDelete(adminModeVariable.id);\n\n            // ** Inform the player with the new message **\n            await player.pm('[FF6347]Your CM role has been removed. Please DM Mad to resolve the issue.[-]');\n\n        } else {\n            // If the limit is not reached, just update the count\n            await takaro.variable.variableControllerUpdate(adminModeVariable.id, {\n                value: newValue.toString(),\n            });\n        }\n    } else {\n        // The variable doesn't exist, so create it for the first time\n        const expiresAt = new Date();\n        expiresAt.setHours(expiresAt.getHours() + 24); // Set expiration for 24 hours from now\n\n        await takaro.variable.variableControllerCreate({\n            key: 'adminMode',\n            value: '1', // Start the count at 1\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n            expiresAt: expiresAt.toISOString(), // Add the expiration date\n        });\n    }\n}\n\nawait main();",
                    "name": "cm  & dm",
                    "description": null,
                    "trigger": "am",
                    "helpText": "[02FEDC]Creative mode and debug menu. Reserved for admins[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog } = data;\n\n    if (!checkPermission(pog, 'VISIT_MAP')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    await player.pm(`[EA899A]Beginning to visit the map[-]`);\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `visitmap full`,\n    });\n}\n\n\nawait main();",
                    "name": "visitmap",
                    "description": null,
                    "trigger": "visitmap",
                    "helpText": "[02FEDC]Open the map for Takaro and CPM.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const level = args.playerTargetLevel;\n    const pname = args.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rl \"${data.arguments.playerTargetName}\" ${data.arguments.playerTargetLevel}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}[-] level to [70FE02]${level}[-]`);\n}\n\nawait main();",
                    "name": "restoreL",
                    "description": null,
                    "trigger": "restoreL",
                    "helpText": "Type /restoreL (name) (level)",
                    "arguments": [
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players level",
                            "position": 1
                        },
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Players Name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const skillPoints = data.arguments.playerTargetLevel;\n    const pname = data.arguments.playerTargetName;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rs  \"${data.arguments.playerTargetName}\" ${data.arguments.playerTargetLevel}`,\n    }));\n\n    // Send success message to the player\n    await player.pm(`Restored [02FEDC]${pname}[-] skill points to [70FE02]${skillPoints}[-]`);\n}\n\nawait main();",
                    "name": "restoreS",
                    "description": null,
                    "trigger": "restoreS",
                    "helpText": "No help text available",
                    "arguments": [
                        {
                            "name": "playerTargetLevel",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players skill points",
                            "position": 1
                        },
                        {
                            "name": "playerTargetName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "players name",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `buffplayer ${targetArg} god`,\n    });\n\n    //PM player to nitify them of thebuff\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[02FEDC]Mad[-][-] grants you God like power for [FF0507]2[-] [4FFF00]min![-]\"`,\n    });\n\n    //Notify sender of buff\n    await player.pm(`[ADDFB3]You have successfully buffed [B1A2CA]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "buff - 1",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "[02FEDC]buff (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "playerTarget",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rvr ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]Successfully removed [02FEDC]${playerTarget}'s[-] vending machine rental[-]`);\n}\n\nawait main();",
                    "name": "rvr",
                    "description": null,
                    "trigger": "rvr",
                    "helpText": "[02FEDC]rvr (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'BUFF')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `debuffplayer ${targetArg} god`,\n    });;\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `pm ${targetArg} \"[ADDFB3]Your powers have stopped. Thanks for playing [FF6D6A]Double Tap[-][-]\"`,\n    });\n\n}\n\nawait main();\n",
                    "name": "buff - 2",
                    "description": null,
                    "trigger": "buff",
                    "helpText": "Ends players buff",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog, arguments: args } = data;\n    const timer = args.timer\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Shutdown the server[-].');\n    };\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `shutdownba ${timer}`,\n    });\n\n}\nawait main();",
                    "name": "shutdownba",
                    "description": null,
                    "trigger": "shutdownba",
                    "helpText": "No help text available",
                    "arguments": [
                        {
                            "name": "timer",
                            "type": "number",
                            "defaultValue": "10",
                            "helpText": "minutes till shutdown",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_CHUNKS')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Reset Chunks[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Reset Chunks[-] [ADDFB3]command executed[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"resetchunks p2\"`,\n    });\n\n    //*** Command(s): cpm-resetchunks, resetchunks ***\n    //Usage:\n    //1. resetchunks p1\n    //2. resetchunks p2\n    //3. resetchunks radius <radius> <steamId/entityId/Name>\n    //1. Store your position to be used on method 2.\n    //2. Reset chunks from position stored on method 1 until your current location(p2).\n    //3. Reset chunks within boundaries on <radius> distance from <steamId/entityId/Name> position.\n}\nawait main();",
                    "name": "reset2",
                    "description": null,
                    "trigger": "reset2",
                    "helpText": "[02FEDC]Last position to reset a chunk.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, module: mod, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'ZOMB_FREE_SELF')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Zombie Free[-] [ADDFB3]for you![-]`);\n\n    //Execute dm mode\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_HF\" 0 hostilefree`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n    // Execute the command\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ccc radius 40 EOS_${player.epicOnlineServicesId} \"VIP_${player.name}_Normal\" 400`\n    });\n\n    // Search for the adminMode variable\n    const zombFreeVariable = (await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['zombFreeVariable'],\n            moduleId: [mod.moduleId],\n            playerId: [player.id],\n            gameServerId: [gameServerId],\n        },\n    })).data.data[0];\n\n    // Update the last message variable so the next time this cron job runs, we know what to send\n    if (zombFreeVariable) {\n        // The variable already exists, update it\n        const currentValue = parseInt(zombFreeVariable.value, 10); // Ensure it's an integer\n        await takaro.variable.variableControllerUpdate(zombFreeVariable.id, {\n            value: (currentValue + 1).toString(), // Increment and convert to string\n        });\n    } else {\n        // The variable doesn't exist, create it with a starting value of 0\n        await takaro.variable.variableControllerCreate({\n            key: 'zombFreeVariable',\n            value: '0', // Start with 0 as a string\n            playerId: player.id,\n            moduleId: mod.moduleId,\n            gameServerId: gameServerId,\n        });\n    }\n}\nawait main();",
                    "name": "zomb",
                    "description": null,
                    "trigger": "zomb",
                    "helpText": "[02FEDC]Stand directly above your land claim when you run this command!!!!!![-] ",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function extractPermissionIds() {\n    const pog = data;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    try {\n        // Try using direct search which seems more reliable based on the logs\n        const directResponse = await takaro.role.roleControllerSearch({\n            filters: {\n                id: ['3ca7484e-5656-4474-897e-db149b732273']\n            }\n        });\n\n        // Check if we got role data\n        if (directResponse.data &&\n            directResponse.data.data &&\n            directResponse.data.data.length > 0 &&\n            directResponse.data.data[0].permissions) {\n\n            const permissions = directResponse.data.data[0].permissions;\n\n            // Extract all permission IDs into an array\n            const permissionIds = permissions\n                .filter(permData => permData.permission && permData.permission.id)\n                .map(permData => permData.permission.id);\n\n            // Output all IDs as a single array on one line\n            console.log(permissionIds);\n\n            return permissionIds.length;\n        }\n\n        console.log([]);\n        return 0;\n\n    } catch (error) {\n        console.error(`Error extracting permission IDs: ${error.message}`);\n        console.log([]);\n        return 0;\n    }\n}\n\n// Execute the function\nasync function main() {\n    try {\n        await extractPermissionIds();\n    } catch (error) {\n        console.log([]);\n    }\n}\n\n\n\nawait main();",
                    "name": "setwaypointpublic",
                    "description": null,
                    "trigger": "setwaypointpublic",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 3",
                    "description": null,
                    "trigger": "th",
                    "helpText": "Targeted Horde round 3",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}[-] [02FEDC]has a horde coming at them. Grab some popcorn and enjoy the show![-]`);\n}\n\nawait main();",
                    "name": "th - 1",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Send a horde in 4 intervals in 30 seconds at a player. Type /th (name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person you're sending the horde after",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 2",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Second round of a targeted horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'MUTE')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetArg} true`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was muted.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü§ê ${player.name} muted ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "mute",
                    "description": null,
                    "trigger": "mute",
                    "helpText": "[02FEDMute (player name) (reason in quotes) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person to be muted",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "No reason given",
                            "helpText": "Reason they were muted",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const reasoning = args.reasoning\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `arrest ${targetArg}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}[-] [EA899A]was arrested for ${reasoning}[-]`,\n    });\n    //Discord Channel Configuration\n    const userDiscord = data.module.userConfig.userDiscordChannel;\n    //Send it to Discord\n    await takaro.discord.discordControllerSendMessage(userDiscord, {\n        message: `${player.name} arrested ${playerTarget} for ${reasoning}`,\n    });\n};\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "arrest",
                    "description": null,
                    "trigger": "arrest",
                    "helpText": "[02FEDC]arrest (player name) (reason for arrest in quotes)[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Other player's name",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "no reason given",
                            "helpText": "Reason",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_PREFAB')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Prefabs[-].');\n    };\n\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `Expect lag. A POI is being reset`,\n    });\n\n    await player.pm(`[EA899A]Resetting prefab[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `getprefab EOS_${player.epicOnlineServicesId} reset`,\n    });\n\n    await player.pm(`[EA899A]Prefab was[-] [ADDFB3]reset[-]`);\n}\nawait main();",
                    "name": "pr",
                    "description": null,
                    "trigger": "pr",
                    "helpText": "[02FEDC]Reset the POI you are standing in[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'RESET_CHUNKS')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Reset Chunks[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Reset Chunks[-] [ADDFB3]position was stored. Now go to the opposite corner and use /reset2[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `eoc EOS_${pog.gameId} \"resetchunks p1\"`,\n    });\n\n    //*** Command(s): cpm-resetchunks, resetchunks ***\n    //Usage:\n    //1. resetchunks p1\n    //2. resetchunks p2\n    //3. resetchunks radius <radius> <steamId/entityId/Name>\n    //1. Store your position to be used on method 2.\n    //2. Reset chunks from position stored on method 1 until your current location(p2).\n    //3. Reset chunks within boundaries on <radius> distance from <steamId/entityId/Name> position.\n}\nawait main();",
                    "name": "reset1",
                    "description": null,
                    "trigger": "reset1",
                    "helpText": "[02FEDC]First position to reset a chunk. Use /reset2 in the opposite corner to reset the desired area.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kick Everyone[-].');\n    };\n\n    const message = \"Doing a server restart. The server will be back up in a minute.\"\n\n    const targetMessage = /\\s/.test(message) ? `\"${message}\"` : message;\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `kickall ${targetMessage}`,\n    });\n\n}\nawait main();",
                    "name": "kickall",
                    "description": null,
                    "trigger": "kickall",
                    "helpText": "No help text available",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `teleportplayer ${targetArg} ${player.name}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "pull",
                    "description": null,
                    "trigger": "pull",
                    "helpText": "[02FEDC]pull (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `release ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[B1A2CA]${playerTarget}[-]'s name wasn't spelled correctly or is phone! Use quotes if their name has spaces!`)\n    };\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[FF6D6A]${args.playerTarget}[-] [EA899A]has been released. Please follow the rules![-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "release",
                    "description": null,
                    "trigger": "release",
                    "helpText": "[02FEDC]Release (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player that's released",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const pname = args.pname\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const newName = /\\s/.test(pname) ? `\"${pname}\"` : pname;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ocn ${targetArg} ${newName}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    await player.pm(`[B1A2CA]${playerTarget}'s[-] [02FEDC]name was set to ${pname} in chat.[-]`);\n}\n\nawait main();\n// ocn <steamId / entityId / playerName> <newName>\n// ocn <steamId / entityId / playerName> clear\n// ocn list",
                    "name": "ocn",
                    "description": null,
                    "trigger": "ocn",
                    "helpText": "[02FEDC] Change a player's name in chat. Type /ocn (Name) (New Name). Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target",
                            "position": 0
                        },
                        {
                            "name": "pname",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "new name",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, entityId, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mv \"${player.name}\" \"${playerTarget}\"`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n\n    // Send success message to the player\n    await player.pm(`Successfully teleported to [02FEDC]${playerTarget}[-]`);\n}\n\nawait main();",
                    "name": "avisit",
                    "description": null,
                    "trigger": "avisit",
                    "helpText": "[02FEDC]avisit (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player teleporting to",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n    const tool = args.tool\n\n\n    //Check Permissions\n    if (!checkPermission(pog, 'WIPE_INVENTORY')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]wipe inventories[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    //Execute Command arrest\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `wi ${targetArg} ${tool}`,\n    })).data.data.rawResult;\n\n    //Throw an error if the name is wrong\n    if (response.includes('Player not found!')) {\n        throw new TakaroUserError(`[8BD3E6]${playerTarget}'s[-] [E9EC6B]name wasn't spelled correctly! Use quotes for names with spaces. Copy their name from Discord if you cannot type their name.[-]`);\n    }\n\n    //Send global message in game to shame the offender\n    await takaro.gameserver.gameServerControllerSendMessage(data.gameServerId, {\n        message: `[B1A2CA]${playerTarget}'s[-] [EA899A]${tool} was wiped.[-]`,\n    });\n}\nawait main();\n//# sourceMappingURL=visit.js.map",
                    "name": "wi",
                    "description": null,
                    "trigger": "wi",
                    "helpText": "Wipe a player's belt, bag, equipment, all",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "person",
                            "position": 0
                        },
                        {
                            "name": "tool",
                            "type": "string",
                            "defaultValue": "belt",
                            "helpText": "belt, bag, equipment, all",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `th ${targetArg} 20`,\n    });\n}\n\nawait main();",
                    "name": "th - 4",
                    "description": null,
                    "trigger": "th",
                    "helpText": "[02FEDC]Fourth round of Targeted Horde[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "target player",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `ban add ${targetPerson} 1 year ${targetReasoning} ${targetPerson}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was banned.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `üî® ${player.name} banned ${person} for ${reasoning}.`,\n    });\n}\n\nawait main();",
                    "name": "ban",
                    "description": null,
                    "trigger": "ban",
                    "helpText": "[02FEDC]ban (player name) (reason in quotes) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name. [-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person being banned",
                            "position": 0
                        },
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "contact a moderator for the reason",
                            "helpText": "Reason they are banned",
                            "position": 1
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'SET_JAIL')) {\n        throw new TakaroUserError('You do not have permission to use the [02FEDC]Zombie free[-] commmand.');\n    };\n\n    await player.pm(`[EA899A]Jail[-] [ADDFB3]was set! 11x11 area. Use /arrest (players name) to arrest them[-]`);\n\n    //Execute command\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `ccc radius 5 EOS_${player.epicOnlineServicesId} jail 0 reversed`,\n    });\n\n    //ccc radius 5 YOURNAME jail 0 reversed)\n    //ccc radius < radius > <steamId/entityId/Name > <claimid/steamid> <accessLevel> [<type>]\n\n}\nawait main();",
                    "name": "setjail",
                    "description": null,
                    "trigger": "setjail",
                    "helpText": "[02FEDC]Set an 11x11 area to put hail birds in.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `mcp ${targetPerson} false`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was unmuted.`);\n\n}\n\nawait main();",
                    "name": "unmute",
                    "description": null,
                    "trigger": "unmute",
                    "helpText": "[02FEDC]unmute (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "player to be unmuted",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    if (!checkPermission(pog, 'RDD')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Reset Drone Data[-].');\n    }\n\n    const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `rdd ${targetArg}`,\n    })).data.data.rawResult;\n\n    if (response.includes('Targetplayer is offline')) {\n        throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n    }\n}\n\nawait main();",
                    "name": "rdd",
                    "description": null,
                    "trigger": "rdd",
                    "helpText": "[02FEDC]rdd (player name) Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Person drone data is being reset for",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, module: mod, arguments: args } = data;\n    const playerTarget = args.playerTarget;\n\n    // Check permissions first\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commands.');\n    }\n\n    // Check if there's an existing confirmation variable\n    const confirmationKey = `kill_confirmation_${playerTarget}`;\n    const existingConfirmation = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: [confirmationKey],\n            gameServerId: [gameServerId],\n            playerId: [pog.playerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // If confirmation variable exists, proceed with kill\n    if (existingConfirmation.data.data.length > 0) {\n        // Delete the confirmation variable first\n        await takaro.variable.variableControllerDelete(existingConfirmation.data.data[0].id);\n\n        const targetArg = /\\s/.test(playerTarget) ? `\"${playerTarget}\"` : playerTarget;\n\n        // Execute the kill command\n        const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n            command: `kill ${targetArg}`,\n        })).data.data.rawResult;\n\n        if (response.includes('Targetplayer is offline')) {\n            throw new TakaroUserError(`[02FEDC]${playerTarget}[-] is not online`);\n        }\n\n        await player.pm(`You have killed [02FEDC]${playerTarget}[-].`);\n    } else {\n        // Create confirmation variable with 30 second expiry\n        const now = new Date();\n        const expiry = new Date(now.getTime() + 30 * 1000); // 30 seconds from now\n\n        await takaro.variable.variableControllerCreate({\n            key: confirmationKey,\n            value: JSON.stringify({ expiry: expiry.toISOString() }),\n            gameServerId,\n            moduleId: mod.moduleId,\n            playerId: pog.playerId\n        });\n\n        // Send confirmation message\n        await player.pm(`Are you sure you want to kill [02FEDC]${playerTarget}[-]? Run the command again within 30 seconds to confirm.`);\n    }\n}\n\nawait main();",
                    "name": "kill",
                    "description": null,
                    "trigger": "kill",
                    "helpText": "[02FEDC]kill (players name) You must run the command a second time to confirm the kill. Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "playerTarget",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "The player you want to kill",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Admin[-] commmands. Staff has been notified. We are coming for you!');\n    }\n    const { player } = data;\n    const modId = data.module.userConfig.moduleLookUp;\n    const commandArg = data.arguments.commandName;\n\n    const res = await takaro.module.moduleControllerGetOne(modId);\n    const commands = res.data.data.latestVersion.commands;\n\n    if (commandArg) {\n        const foundCommand = commands.find(cmd => cmd.trigger === commandArg);\n        await player.pm(`[E9EC6B]${foundCommand.trigger}[-] [8BD3E6]${foundCommand.helpText}[-]`);\n    } else {\n        for (const command of commands) {\n            await player.pm(`[E9EC6B]${command.trigger}[-] [8BD3E6]${command.helpText}[-]`);\n        }\n    }\n}\n\nawait main();\n",
                    "name": "admin",
                    "description": null,
                    "trigger": "admin",
                    "helpText": "A list of admin help commands for admins.",
                    "arguments": [
                        {
                            "name": "commandName",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "why",
                            "position": 0
                        }
                    ]
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog } = data;\n\n    //Check Permissions\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to [02FEDC]Kill All[-].');\n    };\n\n    await player.pm(`[EA899A]Killed all of the zeds on the server[-]`);\n\n    //Execute Resetting Prefab\n    await takaro.gameserver.gameServerControllerExecuteCommand(data.gameServerId, {\n        command: `killall`,\n    });\n\n}\nawait main();",
                    "name": "killall",
                    "description": null,
                    "trigger": "killall",
                    "helpText": "[02FEDC]Kill all of the Zeds on the server.[-]",
                    "arguments": []
                },
                {
                    "function": "import { takaro, data, checkPermission, TakaroUserError } from '@takaro/helpers';\n\nasync function main() {\n    const { player, gameServerId, pog, arguments: args } = data;\n    const { person, reasoning } = args;\n    const discordChannel = data.module.userConfig.userDiscordChannel;\n    if (!checkPermission(pog, 'STAFF_COMMANDS')) {\n        throw new TakaroUserError('You do not have permission to use [02FEDC]Moderator[-] commmands.');\n    }\n\n    //Adjust target to work in quotes\n    const targetPerson = /\\s/.test(person) ? `\"${person}\"` : person;\n\n    const targetReasoning = /\\s/.test(reasoning) ? `\"${reasoning}\"` : reasoning;\n\n    const response = (await takaro.gameserver.gameServerControllerExecuteCommand(gameServerId, {\n        command: `kick ${targetPerson} ${targetReasoning}`,\n    })).data.data.rawResult;\n\n    if (response.includes('is not a valid entity id, player name or user id')) {\n        throw new TakaroUserError(`[02FEDC]${person}[-]'s name wasn't spelled correctly!`);\n    }\n\n    //Confirmation\n    await player.pm(`[02FEDC]${person}[-] was kicked.`);\n\n    await takaro.discord.discordControllerSendMessage(discordChannel, {\n        message: `ü•æ ${player.name} kicked ${person} for ${reasoning}`,\n    });\n}\n\nawait main();",
                    "name": "kick",
                    "description": null,
                    "trigger": "kick",
                    "helpText": "[02FEDC]kick (player name) (reason in quotes). Use quotes for players with spaces in their name. Copy their name from Discord if you cannot type their name.[-]",
                    "arguments": [
                        {
                            "name": "reasoning",
                            "type": "string",
                            "defaultValue": "Contact a moderator for a kick reason",
                            "helpText": "Reason for being kicked",
                            "position": 1
                        },
                        {
                            "name": "person",
                            "type": "string",
                            "defaultValue": "",
                            "helpText": "Player getting kicked",
                            "position": 0
                        }
                    ]
                }
            ],
            "hooks": [],
            "cronJobs": [],
            "functions": [],
            "permissions": [
                {
                    "canHaveCount": false,
                    "description": "Lists land claims near by",
                    "permission": "LIST_LANDCLAIMS",
                    "friendlyName": "List Land Claims nearby"
                },
                {
                    "canHaveCount": false,
                    "description": "Kill a player",
                    "permission": "KILL_PLAYER",
                    "friendlyName": "Kill player"
                },
                {
                    "canHaveCount": false,
                    "description": "Creative mode and debug menu",
                    "permission": "CM_DM",
                    "friendlyName": "Admin Menu"
                },
                {
                    "canHaveCount": false,
                    "description": "Mute unruly players in game",
                    "permission": "MUTE",
                    "friendlyName": "Mute a Player"
                },
                {
                    "canHaveCount": false,
                    "description": "Zombie free command for admins to run the command for their personal house",
                    "permission": "ZOMB_FREE_SELF",
                    "friendlyName": "Zombie Free Self"
                },
                {
                    "canHaveCount": false,
                    "description": "remove nearby land claims",
                    "permission": "REMOVE_LANDCLAIMS",
                    "friendlyName": "Remove land claims"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets a player's corrupted data",
                    "permission": "RESET_PLAYER",
                    "friendlyName": "Reset Player Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Resets player drone data to place a new one",
                    "permission": "RDD",
                    "friendlyName": "Reset Drone Data"
                },
                {
                    "canHaveCount": false,
                    "description": "Unmute a player",
                    "permission": "UNMUTE",
                    "friendlyName": "Unmute"
                },
                {
                    "canHaveCount": false,
                    "description": "Visit the map to unlock for Takaro and CPM",
                    "permission": "VISIT_MAP",
                    "friendlyName": "Visit Map"
                },
                {
                    "canHaveCount": false,
                    "description": "Release a player from jail",
                    "permission": "RELEASE",
                    "friendlyName": "Release Jail"
                },
                {
                    "canHaveCount": false,
                    "description": "Set the location of your jail ",
                    "permission": "SET_JAIL",
                    "friendlyName": "Set Jail Location"
                },
                {
                    "canHaveCount": false,
                    "description": "Buff another player",
                    "permission": "BUFF",
                    "friendlyName": "Buff"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset Chunks Permission",
                    "permission": "RESET_CHUNKS",
                    "friendlyName": "Rest Chunks"
                },
                {
                    "canHaveCount": false,
                    "description": "Wipe Inventory",
                    "permission": "WIPE_INVENTORY",
                    "friendlyName": "Wipe Inventory"
                },
                {
                    "canHaveCount": false,
                    "description": "Commands for staff to use without using Currency",
                    "permission": "STAFF_COMMANDS",
                    "friendlyName": "Staff Commands"
                },
                {
                    "canHaveCount": false,
                    "description": "Reset prefab permission",
                    "permission": "RESET_PREFAB",
                    "friendlyName": "Reset Prefabs"
                }
            ]
        }
    ],
    "takaroVersion": "v0.3.3"
}