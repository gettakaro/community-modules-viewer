name: CI/CD Pipeline

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

env:
  NODE_VERSION: '20'

jobs:
  # Code quality checks
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run format check
        run: npm run format:check

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run typecheck

  # Build check
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: out/
          retention-days: 1

  # E2E tests with Playwright
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build Docker image
        run: docker build -f Dockerfile.prod -t community-modules-viewer:test .

      - name: Run E2E tests
        run: |
          # Start the container
          docker run -d --name test-container -p 3002:80 community-modules-viewer:test
          
          # Wait for container to be ready
          timeout 30 bash -c 'until curl -s -o /dev/null -w "%{http_code}" http://localhost:3002 | grep -q "200"; do sleep 2; done'
          
          # Run Playwright tests
          npx playwright test --config=playwright.config.prod.js
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          docker stop test-container || true
          docker rm test-container || true

  # Docker image build (only on main branch)
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build, e2e-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build production Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          push: false
          tags: |
            community-modules-viewer:latest
            community-modules-viewer:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Security scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: npm audit --production --audit-level=high || true