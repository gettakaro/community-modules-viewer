{
    "name": "Limon_triviaTime",
    "versions": [
        {
            "tag": "latest",
            "description": "# Limon_triviaTime: Interactive Trivia Game System\n\nThe **Limon_triviaTime** module transforms your gaming server with an engaging trivia game system that automatically poses questions and rewards correct answers. This interactive Takaro module enhances player engagement while creating fun community interactions.\n\n## Key Benefits:\n- **Customizable Question Library**: Build your own collection of trivia questions and answers\n- **Flexible Reward System**: Choose between currency or item rewards for winners\n- **Automated Scheduling**: Set trivia events to run at specified intervals\n- **Player Engagement Tool**: Keeps your community active and entertained\n- **Simple Answer Validation**: Easy command-based answer submission system\n\n## Features:\n* Configurable question database with pre-populated examples\n* Dual reward types (currency or items)\n* Customizable item quality and quantity settings\n* Permission-based participation control\n* Automated trivia scheduling with cron jobs\n* Real-time feedback on incorrect answers\n* Server-wide announcements for winners\n\nIdeal for server administrators looking to increase player retention and build community through interactive gameplay elements. Works seamlessly with existing Takaro economy and item systems.",            "configSchema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"properties\":{\"rewardItems\":{\"title\":\"Items\",\"description\":\"If you choose items as a rewardtype, you will be able to select a list of items.\",\"x-component\":\"item\",\"type\":\"array\",\"uniqueItems\":true,\"items\":{\"type\":\"object\",\"title\":\"Item\",\"properties\":{\"item\":{\"type\":\"string\",\"title\":\"Item\"},\"amount\":{\"type\":\"number\",\"title\":\"Amount\"},\"quality\":{\"type\":\"string\",\"title\":\"Quality\"}}}},\"rewardType\":{\"title\":\"rewardType\",\"description\":\"Choose Currency or items\",\"default\":\"currency\",\"type\":\"string\",\"enum\":[\"currency\",\"items\"]},\"rewardAmount\":{\"title\":\"rewardAmount\",\"description\":\"If you choose currency this will be the reward amount\",\"default\":0,\"type\":\"number\",\"minimum\":1,\"maximum\":100000},\"questions\":{\"type\":\"array\",\"title\":\"Questions\",\"description\":\"Key value pairs of questions and answers\",\"items\":{\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The question\",\"minLength\":1},\"answer\":{\"type\":\"string\",\"description\":\"The answer\"}}},\"default\":[{\"question\":\"What is the capital of France?\",\"answer\":\"Paris\"},{\"question\":\"What is a baby goat called?\",\"answer\":\"Kid\"},{\"question\":\"What is the largest mammal?\",\"answer\":\"Blue Whale\"},{\"question\":\"What is the largest planet in our solar system?\",\"answer\":\"Jupiter\"},{\"question\":\"What is the largest ocean on Earth?\",\"answer\":\"Pacific Ocean\"},{\"question\":\"What is the largest country in the world?\",\"answer\":\"Russia\"},{\"question\":\"What is the largest desert in the world?\",\"answer\":\"Antarctica\"},{\"question\":\"What is the largest continent on Earth?\",\"answer\":\"Asia\"},{\"question\":\"What is the largest mountain in the world?\",\"answer\":\"Mount Everest\"},{\"question\":\"What is the largest forest in the world?\",\"answer\":\"Amazon Rainforest\"}]}},\"additionalProperties\":false}",
            "uiSchema": "{\"rewardItems\":{\"items\":{\"item\":{\"ui:widget\":\"item\"}}}}",
            "commands": [
                {
                    "function": "import { takaro, data, TakaroUserError, checkPermission } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, module: mod, player, chatMessage, pog } = data;\n\n    if (!checkPermission(pog, 'TRIVIA_PARTICIPATE')) {\n        throw new TakaroUserError('You do not have permission to participate in trivia!');\n    }\n\n    const answer = chatMessage.msg.split(' ').slice(1).join(' ');\n\n    // Get all trivia variables\n    const triviaVars = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['trivia_question', 'trivia_answer', 'trivia_reward'],\n            gameServerId: [gameServerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    if (triviaVars.data.data.length === 0) {\n        throw new TakaroUserError('There is no active trivia question right now!');\n    }\n\n    // Parse variables\n    const vars = triviaVars.data.data.reduce((acc, curr) => {\n        acc[curr.key] = curr;\n        return acc;\n    }, {});\n\n    const question = vars.trivia_question.value;\n    const correctAnswer = vars.trivia_answer.value;\n    const reward = JSON.parse(vars.trivia_reward.value);\n\n    if (answer.toLowerCase() === correctAnswer.toLowerCase()) {\n        if (reward.type === 'currency') {\n            await takaro.playerOnGameserver.playerOnGameServerControllerAddCurrency(gameServerId, player.id, {\n                currency: reward.amount\n            });\n\n            const currencyName = (await takaro.settings.settingsControllerGetOne('currencyName', gameServerId)).data.data.value;\n            await takaro.gameserver.gameServerControllerSendMessage(gameServerId, {\n                message: `${player.name} answered \"${question}\" correctly and received ${reward.amount} ${currencyName}!`\n            });\n        } else {\n            // For items, we need to get the item details first\n            const itemDetails = (await takaro.item.itemControllerFindOne(reward.itemId)).data.data;\n\n            await takaro.gameserver.gameServerControllerGiveItem(gameServerId, player.id, {\n                name: itemDetails.code,\n                amount: reward.amount,\n                quality: reward.quality || ''\n            });\n\n            await takaro.gameserver.gameServerControllerSendMessage(gameServerId, {\n                message: `${player.name} answered \"${question}\" correctly and received ${reward.amount}x ${itemDetails.name}!`\n            });\n        }\n\n        // Clean up all trivia variables\n        await Promise.all(Object.values(vars).map(variable =>\n            takaro.variable.variableControllerDelete(variable.id)\n        ));\n    } else {\n        await takaro.gameserver.gameServerControllerSendMessage(gameServerId, {\n            message: `${player.name} guessed \"${answer}\" - That's not correct! Try again!`\n        });\n    }\n}\n\nawait main();",
                    "name": "playerAnswer",
                    "trigger": "answer",
                    "helpText": "No help text available",
                    "arguments": []
                }
            ],
            "hooks": [],
            "cronJobs": [
                {
                    "function": "import { takaro, data } from '@takaro/helpers';\n\nasync function main() {\n    const { gameServerId, module: mod } = data;\n\n    // Check for online players\n    const currentPlayers = (await takaro.playerOnGameserver.playerOnGameServerControllerSearch({\n        filters: {\n            gameServerId: [gameServerId],\n            online: [true]\n        }\n    })).data.meta;\n\n    if (currentPlayers.total === 0) {\n        return;\n    }\n\n    // Get questions from config or use default\n    const questions = mod.userConfig.questions || [\n        { question: \"What is the largest country in the world?\", answer: \"Russia\" }\n    ];\n\n    // Clear any existing questions/rewards\n    const existingVariables = await takaro.variable.variableControllerSearch({\n        filters: {\n            key: ['trivia_question', 'trivia_answer', 'trivia_reward'],\n            gameServerId: [gameServerId],\n            moduleId: [mod.moduleId]\n        }\n    });\n\n    // Delete all existing trivia variables\n    await Promise.all(existingVariables.data.data.map(variable =>\n        takaro.variable.variableControllerDelete(variable.id)\n    ));\n\n    // Select random question\n    const randomQuestion = questions[Math.floor(Math.random() * questions.length)];\n\n    // Store question separately\n    await takaro.variable.variableControllerCreate({\n        key: 'trivia_question',\n        value: randomQuestion.question,\n        gameServerId,\n        moduleId: mod.moduleId\n    });\n\n    // Store answer separately\n    await takaro.variable.variableControllerCreate({\n        key: 'trivia_answer',\n        value: randomQuestion.answer,\n        gameServerId,\n        moduleId: mod.moduleId\n    });\n\n    // Setup reward\n    const rewardType = mod.userConfig.rewardType || 'currency';\n    if (rewardType === 'items') {\n        const configuredItems = mod.userConfig.rewardItems || [];\n        if (configuredItems.length > 0) {\n            const randomItemIndex = Math.floor(Math.random() * configuredItems.length);\n            const selectedItem = configuredItems[randomItemIndex];\n\n            // Store reward info separately\n            await takaro.variable.variableControllerCreate({\n                key: 'trivia_reward',\n                value: JSON.stringify({\n                    type: 'items',\n                    itemId: selectedItem.item,\n                    amount: selectedItem.amount || 1,\n                    quality: selectedItem.quality || ''\n                }),\n                gameServerId,\n                moduleId: mod.moduleId\n            });\n        } else {\n            console.error('Items reward type selected but no items configured');\n            return;\n        }\n    } else {\n        // Store currency reward info\n        await takaro.variable.variableControllerCreate({\n            key: 'trivia_reward',\n            value: JSON.stringify({\n                type: 'currency',\n                amount: mod.userConfig.rewardAmount || 100\n            }),\n            gameServerId,\n            moduleId: mod.moduleId\n        });\n    }\n\n    const prefix = (await takaro.settings.settingsControllerGetOne('commandPrefix', gameServerId)).data.data.value;\n\n    await takaro.gameserver.gameServerControllerSendMessage(gameServerId, {\n        message: `Trivia Time! ${randomQuestion.question} (Answer with ${prefix}answer <your guess>)`\n    });\n}\n\nawait main();",
                    "name": "TriviaTime",
                    "temporalValue": "0 0 * * *"
                }
            ],
            "functions": [],
            "permissions": [
                {
                    "canHaveCount": false,
                    "description": "TRIVIA_PARTICIPATE",
                    "permission": "TRIVIA_PARTICIPATE",
                    "friendlyName": "TRIVIA_PARTICIPATE"
                }
            ]
        }
    ],
    "takaroVersion": "main"
}